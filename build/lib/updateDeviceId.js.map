{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceId.ts"],
  "sourcesContent": ["import axios from 'axios';\r\nimport { MidasAquatemp } from '../main';\r\nimport { saveValue } from './saveValue';\r\nimport { updateDeviceStatus } from './updateDeviceStatus';\r\nimport { useStore } from './store';\r\nconst store = useStore();\r\nlet _this: MidasAquatemp\r\n\r\nexport async function updateDeviceID(): Promise<void> {\r\n    if (!_this) {\r\n        _this = MidasAquatemp.getInstance();\r\n    }\r\n    const { token, apiLevel, cloudURL } = store;\r\n\r\n    if (token) {\r\n        _this.log.info(\"Token: \" + token)\r\n        var sURL;\r\n        if (apiLevel < 3) {\r\n            sURL = cloudURL + '/app/device/deviceList.json';\r\n        } else {\r\n            sURL = cloudURL + '/app/device/deviceList';\r\n        }\r\n        const response = await axios.post(sURL, {\r\n            \"productIds\": [\r\n                \"1132174963097280512\",\r\n                \"1245226668902080512\",\r\n                \"1656269521923575808\",\r\n                \"1663080854333558784\",\r\n                \"1596427678569979904\",\r\n                \"1674238226096406528\",\r\n                \"1650063968998252544\",\r\n                \"1668781858447085568\",\r\n                \"1186904563333062656\",\r\n                \"1158905952238313472\",\r\n                \"1442284873216843776\",\r\n                \"1732565142225256450\",\r\n                \"1548963836789501952\",\r\n                \"1669159229372477440\",\r\n                \"1650758828508766208\",\r\n                \"1664085465655808000\"\r\n            ]\r\n        }, {\r\n            headers: { \"x-token\": token },\r\n        })\r\n\r\n        if (response && response.status == 200) {\r\n            // printLog(\"DeviceList: \" + JSON.stringify(response.data));\r\n            if (response.data.error_code == 0) {\r\n                if (apiLevel < 3) {\r\n                    store.device = response.data.object_result[0].device_code;\r\n                    store.product = response.data.object_result[0].product_id;\r\n                    store.reachable = (response.data.object_result[0].device_status == \"ONLINE\");\r\n                } else {\r\n                    store.device = response.data.objectResult[0].deviceCode;\r\n                    store.product = response.data.objectResult[0].productId;\r\n                    store.reachable = (response.data.objectResult[0].deviceStatus == \"ONLINE\");\r\n                }\r\n\r\n                // printLog(\"DeviceCode: \" + device + \", ProductID: \" + product + \", DeviceStatus: \" + reachable);\r\n                saveValue(\"DeviceCode\", store.device, \"string\");\r\n                saveValue(\"ProductCode\", store.product, \"string\");\r\n\r\n                if (store.reachable && store.device) {\r\n                    saveValue(\"info.connection\", true, \"boolean\");\r\n                    if (store.device != \"\" && store.product) {\r\n                        await updateDeviceStatus()\r\n\r\n\r\n\r\n                    };\r\n                } else {\r\n                    // offline\r\n                    store.device = \"\";\r\n                    saveValue(\"info.connection\", false, \"boolean\");\r\n                }\r\n            } else {\r\n                // Login-Fehler\r\n                // log(\"Fehler in updateDeviceID(): \" + JSON.stringify(response.data), \"error\");\r\n\r\n                saveValue(\"info.connection\", false, \"boolean\");\r\n\r\n                store.token = \"\",\r\n                    store.device = \"\",\r\n                    store.reachable = false\r\n\r\n            }\r\n        }\r\n        // Login-Fehler\r\n        // log(\"Fehler in updateDeviceID(): \" + JSON.stringify(response.data), \"error\");\r\n\r\n        saveValue(\"info.connection\", false, \"boolean\");\r\n    }\r\n    store.token = \"\",\r\n        store.device = \"\",\r\n        store.reachable = false\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,kBAA8B;AAC9B,uBAA0B;AAC1B,gCAAmC;AACnC,mBAAyB;AACzB,MAAM,YAAQ,uBAAS;AACvB,IAAI;AAEJ,eAAsB,iBAAgC;AAClD,MAAI,CAAC,OAAO;AACR,YAAQ,0BAAc,YAAY;AAAA,EACtC;AACA,QAAM,EAAE,OAAO,UAAU,SAAS,IAAI;AAEtC,MAAI,OAAO;AACP,UAAM,IAAI,KAAK,YAAY,KAAK;AAChC,QAAI;AACJ,QAAI,WAAW,GAAG;AACd,aAAO,WAAW;AAAA,IACtB,OAAO;AACH,aAAO,WAAW;AAAA,IACtB;AACA,UAAM,WAAW,MAAM,aAAAA,QAAM,KAAK,MAAM;AAAA,MACpC,cAAc;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,GAAG;AAAA,MACC,SAAS,EAAE,WAAW,MAAM;AAAA,IAChC,CAAC;AAED,QAAI,YAAY,SAAS,UAAU,KAAK;AAEpC,UAAI,SAAS,KAAK,cAAc,GAAG;AAC/B,YAAI,WAAW,GAAG;AACd,gBAAM,SAAS,SAAS,KAAK,cAAc,CAAC,EAAE;AAC9C,gBAAM,UAAU,SAAS,KAAK,cAAc,CAAC,EAAE;AAC/C,gBAAM,YAAa,SAAS,KAAK,cAAc,CAAC,EAAE,iBAAiB;AAAA,QACvE,OAAO;AACH,gBAAM,SAAS,SAAS,KAAK,aAAa,CAAC,EAAE;AAC7C,gBAAM,UAAU,SAAS,KAAK,aAAa,CAAC,EAAE;AAC9C,gBAAM,YAAa,SAAS,KAAK,aAAa,CAAC,EAAE,gBAAgB;AAAA,QACrE;AAGA,wCAAU,cAAc,MAAM,QAAQ,QAAQ;AAC9C,wCAAU,eAAe,MAAM,SAAS,QAAQ;AAEhD,YAAI,MAAM,aAAa,MAAM,QAAQ;AACjC,0CAAU,mBAAmB,MAAM,SAAS;AAC5C,cAAI,MAAM,UAAU,MAAM,MAAM,SAAS;AACrC,sBAAM,8CAAmB;AAAA,UAI7B;AAAC;AAAA,QACL,OAAO;AAEH,gBAAM,SAAS;AACf,0CAAU,mBAAmB,OAAO,SAAS;AAAA,QACjD;AAAA,MACJ,OAAO;AAIH,wCAAU,mBAAmB,OAAO,SAAS;AAE7C,cAAM,QAAQ,IACV,MAAM,SAAS,IACf,MAAM,YAAY;AAAA,MAE1B;AAAA,IACJ;AAIA,oCAAU,mBAAmB,OAAO,SAAS;AAAA,EACjD;AACA,QAAM,QAAQ,IACV,MAAM,SAAS,IACf,MAAM,YAAY;AAC1B;",
  "names": ["axios"]
}
