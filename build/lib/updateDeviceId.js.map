{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceId.ts"],
  "sourcesContent": ["import axios from \"axios\";\nimport { MidasAquatemp } from \"../main\";\nimport { getAxiosGetUpdateDeviceIdParams } from \"./axiosParameter\";\nimport { getUpdateDeviceIdSUrl } from \"./endPoints\";\nimport { saveValue } from \"./saveValue\";\nimport { initStore } from \"./store\";\nimport { updateDeviceStatus } from \"./updateDeviceStatus\";\n\nlet _this: MidasAquatemp;\n\nexport async function updateDeviceID(): Promise<void> {\n\tconst store = initStore();\n\ttry {\n\t\tif (!_this) {\n\t\t\t_this = MidasAquatemp.getInstance();\n\t\t}\n\t\tconst { token, apiLevel } = store;\n\t\tif (!token) {\n\t\t\treturn;\n\t\t}\n\t\tconst { sURL } = getUpdateDeviceIdSUrl();\n\n\t\tconst response = await axios.post(sURL, getAxiosGetUpdateDeviceIdParams(), {\n\t\t\theaders: { \"x-token\": token },\n\t\t});\n\n\t\tif (!response || response.status !== 200) {\n\t\t\t// Login-Fehler\n\t\t\tsaveValue(\"info.connection\", false, \"boolean\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (response.data.error_code !== \"0\") {\n\t\t\t// Login-Fehler\n\t\t\tsaveValue(\"info.connection\", false, \"boolean\");\n\t\t\t(store.token = \"\"), (store.device = \"\"), (store.reachable = false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (apiLevel < 3) {\n\t\t\tstore.device = response.data.object_result[0]?.device_code;\n\t\t\tstore.product = response.data.object_result[0]?.product_id;\n\t\t\tstore.reachable = response.data.object_result[0]?.device_status == \"ONLINE\";\n\t\t} else {\n\t\t\tstore.device = response.data.objectResult[0]?.deviceCode;\n\t\t\tstore.product = response.data.objectResult[0]?.productId;\n\t\t\tstore.reachable = response.data.objectResult[0]?.deviceStatus == \"ONLINE\";\n\t\t}\n\n\t\tsaveValue(\"DeviceCode\", store.device, \"string\");\n\t\tsaveValue(\"ProductCode\", store.product, \"string\");\n\n\t\tif (store.reachable && store.device) {\n\t\t\tsaveValue(\"info.connection\", true, \"boolean\");\n\t\t\tif (store.device != \"\" && store.product) {\n\t\t\t\tawait updateDeviceStatus();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// offline\n\t\tstore.device = \"\";\n\t\tsaveValue(\"info.connection\", false, \"boolean\");\n\t} catch (error: any) {\n\t\t_this.log.error(\"Error in updateDeviceID(): \" + JSON.stringify(error));\n\t\t_this.log.error(\"Error in updateDeviceID(): \" + JSON.stringify(error.stack));\n\t\t(store.token = \"\"), (store.device = \"\"), (store.reachable = false);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,kBAA8B;AAC9B,4BAAgD;AAChD,uBAAsC;AACtC,uBAA0B;AAC1B,mBAA0B;AAC1B,gCAAmC;AAEnC,IAAI;AAEJ,eAAsB,iBAAgC;AAVtD;AAWC,QAAM,YAAQ,wBAAU;AACxB,MAAI;AACH,QAAI,CAAC,OAAO;AACX,cAAQ,0BAAc,YAAY;AAAA,IACnC;AACA,UAAM,EAAE,OAAO,SAAS,IAAI;AAC5B,QAAI,CAAC,OAAO;AACX;AAAA,IACD;AACA,UAAM,EAAE,KAAK,QAAI,wCAAsB;AAEvC,UAAM,WAAW,MAAM,aAAAA,QAAM,KAAK,UAAM,uDAAgC,GAAG;AAAA,MAC1E,SAAS,EAAE,WAAW,MAAM;AAAA,IAC7B,CAAC;AAED,QAAI,CAAC,YAAY,SAAS,WAAW,KAAK;AAEzC,sCAAU,mBAAmB,OAAO,SAAS;AAC7C;AAAA,IACD;AAEA,QAAI,SAAS,KAAK,eAAe,KAAK;AAErC,sCAAU,mBAAmB,OAAO,SAAS;AAC7C,MAAC,MAAM,QAAQ,IAAM,MAAM,SAAS,IAAM,MAAM,YAAY;AAC5D;AAAA,IACD;AAEA,QAAI,WAAW,GAAG;AACjB,YAAM,UAAS,cAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC;AAC/C,YAAM,WAAU,cAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC;AAChD,YAAM,cAAY,cAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC,kBAAiB;AAAA,IACpE,OAAO;AACN,YAAM,UAAS,cAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B;AAC9C,YAAM,WAAU,cAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B;AAC/C,YAAM,cAAY,cAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B,iBAAgB;AAAA,IAClE;AAEA,oCAAU,cAAc,MAAM,QAAQ,QAAQ;AAC9C,oCAAU,eAAe,MAAM,SAAS,QAAQ;AAEhD,QAAI,MAAM,aAAa,MAAM,QAAQ;AACpC,sCAAU,mBAAmB,MAAM,SAAS;AAC5C,UAAI,MAAM,UAAU,MAAM,MAAM,SAAS;AACxC,kBAAM,8CAAmB;AAAA,MAC1B;AACA;AAAA,IACD;AAEA,UAAM,SAAS;AACf,oCAAU,mBAAmB,OAAO,SAAS;AAAA,EAC9C,SAAS,OAAY;AACpB,UAAM,IAAI,MAAM,gCAAgC,KAAK,UAAU,KAAK,CAAC;AACrE,UAAM,IAAI,MAAM,gCAAgC,KAAK,UAAU,MAAM,KAAK,CAAC;AAC3E,IAAC,MAAM,QAAQ,IAAM,MAAM,SAAS,IAAM,MAAM,YAAY;AAAA,EAC7D;AACD;",
  "names": ["axios"]
}
