{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceId.ts"],
  "sourcesContent": ["import type { MidasAquatemp } from '../main';\nimport { getAxiosUpdateDeviceIdParams, getHeaders } from './axiosParameter';\nimport { getUpdateDeviceIdSUrl } from './endPoints';\nimport { saveValue } from './saveValue';\nimport { initStore } from './store';\nimport { updateDeviceStatus } from './updateDeviceStatus';\nimport { errorLogger } from './logging';\nimport { request } from './axios';\n\nexport async function updateDeviceID(adapter: MidasAquatemp): Promise<void> {\n    const store = initStore();\n    try {\n        const { token, apiLevel } = store;\n        if (!token) {\n            return;\n        }\n        const { sURL } = getUpdateDeviceIdSUrl();\n        const options = getAxiosUpdateDeviceIdParams();\n        adapter.log.debug(`UpdateDeviceID URL: ${sURL}`);\n        adapter.log.debug(`UpdateDeviceID options: ${JSON.stringify(options)}`);\n\n        const response = await request(adapter, sURL, options, getHeaders(token));\n        if (!response?.data) {\n            return;\n        }\n        adapter.log.debug(`UpdateDeviceID response: ${JSON.stringify(response.data)}`);\n        adapter.log.debug(`UpdateDeviceID response status: ${JSON.stringify(response.status)}`);\n\n        if (!response || response.status !== 200 || response.data.error_code !== '0') {\n            // Login-Fehler\n            store.resetOnErrorHandler();\n            return;\n        }\n\n        if (!response.data?.object_result?.[0]?.device_code && !response.data?.objectResult?.[0]?.deviceCode) {\n            adapter.log.error('Error in updateDeviceID: No device code found');\n            adapter.log.error(`Response: ${JSON.stringify(response.data)}`);\n            return;\n        }\n\n        if (apiLevel < 3) {\n            store.device = response.data.object_result[0]?.device_code;\n            store.product = response.data.object_result[0]?.product_id;\n            store.reachable = response.data.object_result[0]?.device_status == 'ONLINE';\n        } else {\n            store.device = response.data.objectResult[0]?.deviceCode;\n            store.product = response.data.objectResult[0]?.productId;\n            store.reachable = response.data.objectResult[0]?.deviceStatus == 'ONLINE';\n        }\n        adapter.log.debug(`Device: ${store.device}`);\n        adapter.log.debug(`Product: ${store.product}`);\n        adapter.log.debug(`Reachable: ${store.reachable}`);\n\n        await saveValue({ key: 'DeviceCode', value: store.device, stateType: 'string', adapter: adapter });\n        await saveValue({ key: 'ProductCode', value: store.product, stateType: 'string', adapter: adapter });\n\n        if (store.reachable && store.device) {\n            await saveValue({ key: 'info.connection', value: true, stateType: 'boolean', adapter: adapter });\n            if (store.device != '' && store.product) {\n                adapter.log.debug('Update device status');\n                await updateDeviceStatus(adapter);\n            }\n            return;\n        }\n        adapter.log.debug('Device not reachable');\n        store.resetOnErrorHandler();\n    } catch (error: any) {\n        errorLogger('Error in updateDeviceID', error, adapter);\n\n        store.token = '';\n        store.device = '';\n        store.reachable = false;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,4BAAyD;AACzD,uBAAsC;AACtC,uBAA0B;AAC1B,mBAA0B;AAC1B,gCAAmC;AACnC,qBAA4B;AAC5B,mBAAwB;AAExB,eAAsB,eAAe,SAAuC;AAT5E;AAUI,QAAM,YAAQ,wBAAU;AACxB,MAAI;AACA,UAAM,EAAE,OAAO,SAAS,IAAI;AAC5B,QAAI,CAAC,OAAO;AACR;AAAA,IACJ;AACA,UAAM,EAAE,KAAK,QAAI,wCAAsB;AACvC,UAAM,cAAU,oDAA6B;AAC7C,YAAQ,IAAI,MAAM,uBAAuB,IAAI,EAAE;AAC/C,YAAQ,IAAI,MAAM,2BAA2B,KAAK,UAAU,OAAO,CAAC,EAAE;AAEtE,UAAM,WAAW,UAAM,sBAAQ,SAAS,MAAM,aAAS,kCAAW,KAAK,CAAC;AACxE,QAAI,EAAC,qCAAU,OAAM;AACjB;AAAA,IACJ;AACA,YAAQ,IAAI,MAAM,4BAA4B,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAC7E,YAAQ,IAAI,MAAM,mCAAmC,KAAK,UAAU,SAAS,MAAM,CAAC,EAAE;AAEtF,QAAI,CAAC,YAAY,SAAS,WAAW,OAAO,SAAS,KAAK,eAAe,KAAK;AAE1E,YAAM,oBAAoB;AAC1B;AAAA,IACJ;AAEA,QAAI,GAAC,0BAAS,SAAT,mBAAe,kBAAf,mBAA+B,OAA/B,mBAAmC,gBAAe,GAAC,0BAAS,SAAT,mBAAe,iBAAf,mBAA8B,OAA9B,mBAAkC,aAAY;AAClG,cAAQ,IAAI,MAAM,+CAA+C;AACjE,cAAQ,IAAI,MAAM,aAAa,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAC9D;AAAA,IACJ;AAEA,QAAI,WAAW,GAAG;AACd,YAAM,UAAS,cAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC;AAC/C,YAAM,WAAU,cAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC;AAChD,YAAM,cAAY,cAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC,kBAAiB;AAAA,IACvE,OAAO;AACH,YAAM,UAAS,cAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B;AAC9C,YAAM,WAAU,cAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B;AAC/C,YAAM,cAAY,cAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B,iBAAgB;AAAA,IACrE;AACA,YAAQ,IAAI,MAAM,WAAW,MAAM,MAAM,EAAE;AAC3C,YAAQ,IAAI,MAAM,YAAY,MAAM,OAAO,EAAE;AAC7C,YAAQ,IAAI,MAAM,cAAc,MAAM,SAAS,EAAE;AAEjD,cAAM,4BAAU,EAAE,KAAK,cAAc,OAAO,MAAM,QAAQ,WAAW,UAAU,QAAiB,CAAC;AACjG,cAAM,4BAAU,EAAE,KAAK,eAAe,OAAO,MAAM,SAAS,WAAW,UAAU,QAAiB,CAAC;AAEnG,QAAI,MAAM,aAAa,MAAM,QAAQ;AACjC,gBAAM,4BAAU,EAAE,KAAK,mBAAmB,OAAO,MAAM,WAAW,WAAW,QAAiB,CAAC;AAC/F,UAAI,MAAM,UAAU,MAAM,MAAM,SAAS;AACrC,gBAAQ,IAAI,MAAM,sBAAsB;AACxC,kBAAM,8CAAmB,OAAO;AAAA,MACpC;AACA;AAAA,IACJ;AACA,YAAQ,IAAI,MAAM,sBAAsB;AACxC,UAAM,oBAAoB;AAAA,EAC9B,SAAS,OAAY;AACjB,oCAAY,2BAA2B,OAAO,OAAO;AAErD,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,UAAM,YAAY;AAAA,EACtB;AACJ;",
  "names": []
}
