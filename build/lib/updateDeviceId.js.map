{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceId.ts"],
  "sourcesContent": ["import axios from 'axios';\nimport { MidasAquatemp } from '../main';\nimport { getAxiosUpdateDeviceIdParams } from './axiosParameter';\nimport { getUpdateDeviceIdSUrl } from './endPoints';\nimport { saveValue } from './saveValue';\nimport { initStore } from './store';\nimport { updateDeviceStatus } from './updateDeviceStatus';\n\nlet _this: MidasAquatemp;\n\nexport async function updateDeviceID(): Promise<void> {\n    const store = initStore();\n    try {\n        if (!_this) {\n            _this = MidasAquatemp.getInstance();\n        }\n        const { token, apiLevel } = store;\n        if (!token) {\n            return;\n        }\n        const { sURL } = getUpdateDeviceIdSUrl();\n        const options = getAxiosUpdateDeviceIdParams();\n        _this.log.debug(`UpdateDeviceID URL: ${sURL}`);\n        _this.log.debug(`UpdateDeviceID options: ${JSON.stringify(options)}`);\n\n        const response = await axios.post(sURL, options, {\n            headers: { 'x-token': token },\n        });\n\n        _this.log.debug(`UpdateDeviceID response: ${JSON.stringify(response.data)}`);\n        _this.log.debug(`UpdateDeviceID response status: ${JSON.stringify(response.status)}`);\n\n        if (!response || response.status !== 200 || response.data.error_code !== '0') {\n            // Login-Fehler\n            store.resetOnErrorHandler();\n            return;\n        }\n\n        if (!response.data?.object_result?.[0]?.device_code && !response.data?.objectResult?.[0]?.deviceCode) {\n            _this.log.error('Error in updateDeviceID(): No device code found');\n            _this.log.error(`Response: ${JSON.stringify(response.data)}`);\n            return;\n        }\n\n        if (apiLevel < 3) {\n            store.device = response.data.object_result[0]?.device_code;\n            store.product = response.data.object_result[0]?.product_id;\n            store.reachable = response.data.object_result[0]?.device_status == 'ONLINE';\n        } else {\n            store.device = response.data.objectResult[0]?.deviceCode;\n            store.product = response.data.objectResult[0]?.productId;\n            store.reachable = response.data.objectResult[0]?.deviceStatus == 'ONLINE';\n        }\n        _this.log.debug(`Device: ${store.device}`);\n        _this.log.debug(`Product: ${store.product}`);\n        _this.log.debug(`Reachable: ${store.reachable}`);\n\n        await saveValue('DeviceCode', store.device, 'string');\n        await saveValue('ProductCode', store.product, 'string');\n\n        if (store.reachable && store.device) {\n            await saveValue('info.connection', true, 'boolean');\n            if (store.device != '' && store.product) {\n                _this.log.debug('Update device status');\n                await updateDeviceStatus();\n            }\n            return;\n        }\n        _this.log.debug('Device not reachable');\n        store.resetOnErrorHandler();\n    } catch (error: any) {\n        _this.log.error(`Error in updateDeviceID(): ${JSON.stringify(error)}`);\n        _this.log.error(`Error in updateDeviceID(): ${JSON.stringify(error.stack)}`);\n        (store.token = ''), (store.device = ''), (store.reachable = false);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,kBAA8B;AAC9B,4BAA6C;AAC7C,uBAAsC;AACtC,uBAA0B;AAC1B,mBAA0B;AAC1B,gCAAmC;AAEnC,IAAI;AAEJ,eAAsB,iBAAgC;AAVtD;AAWI,QAAM,YAAQ,wBAAU;AACxB,MAAI;AACA,QAAI,CAAC,OAAO;AACR,cAAQ,0BAAc,YAAY;AAAA,IACtC;AACA,UAAM,EAAE,OAAO,SAAS,IAAI;AAC5B,QAAI,CAAC,OAAO;AACR;AAAA,IACJ;AACA,UAAM,EAAE,KAAK,QAAI,wCAAsB;AACvC,UAAM,cAAU,oDAA6B;AAC7C,UAAM,IAAI,MAAM,uBAAuB,IAAI,EAAE;AAC7C,UAAM,IAAI,MAAM,2BAA2B,KAAK,UAAU,OAAO,CAAC,EAAE;AAEpE,UAAM,WAAW,MAAM,aAAAA,QAAM,KAAK,MAAM,SAAS;AAAA,MAC7C,SAAS,EAAE,WAAW,MAAM;AAAA,IAChC,CAAC;AAED,UAAM,IAAI,MAAM,4BAA4B,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAC3E,UAAM,IAAI,MAAM,mCAAmC,KAAK,UAAU,SAAS,MAAM,CAAC,EAAE;AAEpF,QAAI,CAAC,YAAY,SAAS,WAAW,OAAO,SAAS,KAAK,eAAe,KAAK;AAE1E,YAAM,oBAAoB;AAC1B;AAAA,IACJ;AAEA,QAAI,GAAC,0BAAS,SAAT,mBAAe,kBAAf,mBAA+B,OAA/B,mBAAmC,gBAAe,GAAC,0BAAS,SAAT,mBAAe,iBAAf,mBAA8B,OAA9B,mBAAkC,aAAY;AAClG,YAAM,IAAI,MAAM,iDAAiD;AACjE,YAAM,IAAI,MAAM,aAAa,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAC5D;AAAA,IACJ;AAEA,QAAI,WAAW,GAAG;AACd,YAAM,UAAS,cAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC;AAC/C,YAAM,WAAU,cAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC;AAChD,YAAM,cAAY,cAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC,kBAAiB;AAAA,IACvE,OAAO;AACH,YAAM,UAAS,cAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B;AAC9C,YAAM,WAAU,cAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B;AAC/C,YAAM,cAAY,cAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B,iBAAgB;AAAA,IACrE;AACA,UAAM,IAAI,MAAM,WAAW,MAAM,MAAM,EAAE;AACzC,UAAM,IAAI,MAAM,YAAY,MAAM,OAAO,EAAE;AAC3C,UAAM,IAAI,MAAM,cAAc,MAAM,SAAS,EAAE;AAE/C,cAAM,4BAAU,cAAc,MAAM,QAAQ,QAAQ;AACpD,cAAM,4BAAU,eAAe,MAAM,SAAS,QAAQ;AAEtD,QAAI,MAAM,aAAa,MAAM,QAAQ;AACjC,gBAAM,4BAAU,mBAAmB,MAAM,SAAS;AAClD,UAAI,MAAM,UAAU,MAAM,MAAM,SAAS;AACrC,cAAM,IAAI,MAAM,sBAAsB;AACtC,kBAAM,8CAAmB;AAAA,MAC7B;AACA;AAAA,IACJ;AACA,UAAM,IAAI,MAAM,sBAAsB;AACtC,UAAM,oBAAoB;AAAA,EAC9B,SAAS,OAAY;AACjB,UAAM,IAAI,MAAM,8BAA8B,KAAK,UAAU,KAAK,CAAC,EAAE;AACrE,UAAM,IAAI,MAAM,8BAA8B,KAAK,UAAU,MAAM,KAAK,CAAC,EAAE;AAC3E,IAAC,MAAM,QAAQ,IAAM,MAAM,SAAS,IAAM,MAAM,YAAY;AAAA,EAChE;AACJ;",
  "names": ["axios"]
}
