{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceDetails.ts"],
  "sourcesContent": ["import type { Modes } from '../types';\nimport { getHeaders, getProtocolCodes } from './axiosParameter';\nimport { getSUrlUpdateDeviceId } from './endPoints';\nimport { saveValue } from './saveValue';\nimport { initStore } from './store';\nimport { errorLogger } from './logging';\nimport type { MidasAquatemp } from '../main';\nimport { request } from './axios';\nimport type { ObjectResultResponse } from '../types/types';\n\nexport const numberToBoolean = (value: number): boolean => {\n    return value === 1;\n};\n\nconst saveValues = async (adapter: MidasAquatemp, value: any): Promise<void> => {\n    // Stromverbrauch T07 x T14 in Watt\n    await saveValue({\n        key: 'consumption',\n        value: parseFloat(findCodeVal(value, ['T07', 'T7'])) * parseFloat(findCodeVal(value, 'T14')),\n        stateType: 'number',\n        adapter: adapter,\n    });\n    // Luftansaug-Temperatur T01\n    await saveValue({\n        key: 'suctionTemp',\n        value: parseFloat(findCodeVal(value, ['T01', 'T1'])),\n        stateType: 'number',\n        adapter: adapter,\n    });\n    // Inlet-Temperatur T02\n    await saveValue({\n        key: 'tempIn',\n        value: parseFloat(findCodeVal(value, ['T02', 'T2'])),\n        stateType: 'number',\n        adapter: adapter,\n    });\n    // outlet-Temperatur T03\n    await saveValue({\n        key: 'tempOut',\n        value: parseFloat(findCodeVal(value, ['T03', 'T3'])),\n        stateType: 'number',\n        adapter: adapter,\n    });\n    // Coil-Temperatur T04\n    await saveValue({\n        key: 'coilTemp',\n        value: parseFloat(findCodeVal(value, ['T04', 'T4'])),\n        stateType: 'number',\n        adapter: adapter,\n    });\n    // Umgebungs-Temperatur T05\n    await saveValue({\n        key: 'ambient',\n        value: parseFloat(findCodeVal(value, ['T05', 'T5'])),\n        stateType: 'number',\n        adapter: adapter,\n    });\n    // Kompressorausgang-Temperatur T06\n    await saveValue({\n        key: 'exhaust',\n        value: parseFloat(findCodeVal(value, ['T06', 'T6'])),\n        stateType: 'number',\n        adapter: adapter,\n    });\n    // Str\u00F6mungsschalter S03\n    await saveValue({\n        key: 'flowSwitch',\n        value: numberToBoolean(findCodeVal(value, ['S03', 'S3'])),\n        stateType: 'boolean',\n        adapter: adapter,\n    });\n    // L\u00FCfter-Drehzahl T17\n    await saveValue({\n        key: 'rotor',\n        value: parseInt(findCodeVal(value, 'T17')),\n        stateType: 'number',\n        adapter: adapter,\n    });\n};\n\nexport async function updateDeviceDetails(adapter: MidasAquatemp): Promise<void> {\n    const store = initStore();\n    try {\n        const { apiLevel, token, device: deviceCode } = store;\n        if (!token) {\n            return;\n        }\n\n        const { sURL } = getSUrlUpdateDeviceId();\n\n        const response = await request(adapter, sURL, getProtocolCodes(deviceCode), getHeaders(token));\n        if (!response?.data) {\n            return;\n        }\n        adapter.log.debug(`DeviceDetails: ${JSON.stringify(response.data)}`);\n\n        if (parseInt(response.data.error_code) == 0) {\n            const responseValue: ObjectResultResponse =\n                apiLevel < 3 ? response.data.object_result : response.data.objectResult;\n\n            await saveValue({\n                key: 'rawJSON',\n                value: JSON.stringify(responseValue),\n                stateType: 'string',\n                adapter: adapter,\n            });\n            await saveValues(adapter, responseValue);\n\n            const mode: number = findCodeVal(responseValue, 'Mode');\n            const modes: Modes = {\n                1: 'R02', // Heiz-Modus (-> R02)\n                0: 'R01', // K\u00FChl-Modus (-> R01)\n                2: 'R03', // Auto-Modus (-> R03)\n            };\n\n            await saveValue({\n                key: 'tempSet',\n                value: parseFloat(findCodeVal(responseValue, modes[mode])),\n                stateType: 'number',\n                adapter: adapter,\n            });\n\n            await saveValue({\n                key: 'silent',\n                value: findCodeVal(responseValue, 'Manual-mute') == '1',\n                stateType: 'boolean',\n                adapter: adapter,\n            });\n\n            const powerOpt = findCodeVal(responseValue, 'Power') === '1';\n\n            await saveValue({ key: 'state', value: powerOpt, stateType: 'boolean', adapter: adapter });\n            await saveValue({\n                key: 'mode',\n                value: powerOpt ? findCodeVal(responseValue, 'Mode') : '-1',\n                stateType: 'string',\n                adapter: adapter,\n            });\n\n            await saveValue({ key: 'info.connection', value: true, stateType: 'boolean', adapter: adapter });\n            return;\n        }\n\n        store.resetOnErrorHandler();\n        return;\n    } catch (error: any) {\n        errorLogger('Error updateDeviceDetails', error, adapter);\n    }\n}\n\nfunction findCodeVal(result: ObjectResultResponse, code: string | string[]): any {\n    if (!Array.isArray(code)) {\n        return result.find(item => item.code === code)?.value || '';\n    }\n    for (let i = 0; i < code.length; i++) {\n        const val = result.find(item => item.code === code[i])?.value;\n        if (val !== '0') {\n            return val;\n        }\n    }\n    return '0';\n}\n"],
  "mappings": "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",
  "names": []
}
