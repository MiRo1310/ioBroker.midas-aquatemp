{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceDetails.ts"],
  "sourcesContent": ["import axios from 'axios';\nimport type { Modes } from '../types';\nimport { getProtocolCodes } from './axiosParameter';\nimport { getSUrlUpdateDeviceId } from './endPoints';\nimport { saveValue } from './saveValue';\nimport { initStore } from './store';\nimport { errorLogger } from './logging';\n\nexport const numberToBoolean = (value: number): boolean => {\n    return value === 1;\n};\n\nconst saveValues = async (value: any): Promise<void> => {\n    // Stromverbrauch T07 x T14 in Watt\n    await saveValue(\n        'consumption',\n        parseFloat(findCodeVal(value, ['T07', 'T7'])) * parseFloat(findCodeVal(value, 'T14')),\n        'number',\n    );\n    // Luftansaug-Temperatur T01\n    await saveValue('suctionTemp', parseFloat(findCodeVal(value, ['T01', 'T1'])), 'number');\n    // Inlet-Temperatur T02\n    await saveValue('tempIn', parseFloat(findCodeVal(value, ['T02', 'T2'])), 'number');\n    // outlet-Temperatur T03\n    await saveValue('tempOut', parseFloat(findCodeVal(value, ['T03', 'T3'])), 'number');\n    // Coil-Temperatur T04\n    await saveValue('coilTemp', parseFloat(findCodeVal(value, ['T04', 'T4'])), 'number');\n    // Umgebungs-Temperatur T05\n    await saveValue('ambient', parseFloat(findCodeVal(value, ['T05', 'T5'])), 'number');\n    // Kompressorausgang-Temperatur T06\n    await saveValue('exhaust', parseFloat(findCodeVal(value, ['T06', 'T6'])), 'number');\n    // Str\u00F6mungsschalter S03\n    await saveValue('flowSwitch', numberToBoolean(findCodeVal(value, ['S03', 'S3'])), 'boolean');\n    // L\u00FCfter-Drehzahl T17\n    await saveValue('rotor', parseInt(findCodeVal(value, 'T17')), 'number');\n};\n\nexport async function updateDeviceDetails(): Promise<void> {\n    const store = initStore();\n    try {\n        const { apiLevel, token, device: deviceCode } = store;\n        if (token) {\n            const { sURL } = getSUrlUpdateDeviceId();\n\n            const response = await axios.post(sURL, getProtocolCodes(deviceCode), {\n                headers: { 'x-token': token },\n            });\n            store._this.log.debug(`DeviceDetails: ${JSON.stringify(response.data)}`);\n\n            if (parseInt(response.data.error_code) == 0) {\n                const responseValue = apiLevel < 3 ? response.data.object_result : response.data.objectResult;\n\n                await saveValue('rawJSON', JSON.stringify(responseValue), 'string');\n                await saveValues(responseValue);\n\n                const mode: number = findCodeVal(responseValue, 'Mode');\n                const modes: Modes = {\n                    1: 'R02', // Heiz-Modus (-> R02)\n                    0: 'R01', // K\u00FChl-Modus (-> R01)\n                    2: 'R03', // Auto-Modus (-> R03)\n                };\n                // Ziel-Temperatur anhand Modus\n                await saveValue('tempSet', parseFloat(findCodeVal(responseValue, modes[mode])), 'number');\n\n                // Fl\u00FCstermodus Manual-mute\n                await saveValue('silent', findCodeVal(responseValue, 'Manual-mute') == '1', 'boolean');\n\n                // Zustand Power\n                if (findCodeVal(responseValue, 'Power') == '1') {\n                    await saveValue('state', true, 'boolean');\n                    await saveValue('mode', findCodeVal(responseValue, 'Mode'), 'string');\n                } else {\n                    await saveValue('state', false, 'boolean');\n                    await saveValue('mode', '-1', 'string');\n                }\n\n                await saveValue('info.connection', true, 'boolean');\n                return;\n            }\n\n            store._this.log.error(`Error: ${JSON.stringify(response.data)}`);\n            store.resetOnErrorHandler();\n            return;\n        }\n        return;\n    } catch (error: any) {\n        errorLogger('Error updateDeviceDetails', error, store._this);\n    }\n}\n\nfunction findCodeVal(result: { value: string; code: string }[], code: string | string[]): any {\n    if (!Array.isArray(code)) {\n        return result.find(item => item.code === code)?.value || '';\n    }\n    for (let i = 0; i < code.length; i++) {\n        const val = result.find(item => item.code === code[i])?.value;\n        if (val !== '0') {\n            return val;\n        }\n    }\n    return '0';\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
