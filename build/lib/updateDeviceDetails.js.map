{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceDetails.ts"],
  "sourcesContent": ["import axios from \"axios\";\nimport { getProtocolCodes } from \"./axiosParameter\";\nimport { getSUrlUpdateDeviceId } from \"./endPoints\";\nimport { saveValue } from \"./saveValue\";\nimport { initStore } from \"./store\";\n\n\n\nconst isAuaTemp_Poolsana = (product: string): boolean | null => {\n\tconst store = initStore();\n\tif (product == store.AQUATEMP_POOLSANA) {\n\t\treturn true;\n\t} else if (product == store.AQUATEMP_OTHER1) {\n\t\treturn false;\n\t}\n\treturn null;\n};\n\nconst saveValues = (value: any, product: string): void => {\n\tconst isAquaTemp_Poolsana = isAuaTemp_Poolsana(product);\n\tif (isAquaTemp_Poolsana == null) {\n\t\treturn;\n\t}\n\t// Stromverbrauch T07 x T14 in Watt\n\tsaveValue(\n\t\t\"consumption\",\n\t\tparseFloat(findCodeVal(value, isAquaTemp_Poolsana ? \"T07\" : \"T7\")) * parseFloat(findCodeVal(value, \"T14\")),\n\t\t\"number\",\n\t);\n\t// Luftansaug-Temperatur T01\n\tsaveValue(\"suctionTemp\", parseFloat(findCodeVal(value, isAquaTemp_Poolsana ? \"T01\" : \"T1\")), \"number\");\n\t// Inlet-Temperatur T02\n\tsaveValue(\"tempIn\", parseFloat(findCodeVal(value, isAquaTemp_Poolsana ? \"T02\" : \"T2\")), \"number\");\n\t// outlet-Temperatur T03\n\tsaveValue(\"tempOut\", parseFloat(findCodeVal(value, isAquaTemp_Poolsana ? \"T03\" : \"T3\")), \"number\");\n\t// Coil-Temperatur T04\n\tsaveValue(\"coilTemp\", parseFloat(findCodeVal(value, isAquaTemp_Poolsana ? \"T04\" : \"T4\")), \"number\");\n\t// Umgebungs-Temperatur T05\n\tsaveValue(\"ambient\", parseFloat(findCodeVal(value, isAquaTemp_Poolsana ? \"T05\" : \"T5\")), \"number\");\n\t// Kompressorausgang-Temperatur T06\n\tsaveValue(\"exhaust\", parseFloat(findCodeVal(value, isAquaTemp_Poolsana ? \"T06\" : \"T6\")), \"number\");\n\n\t// L\u00FCfter-Drehzahl T17\n\tsaveValue(\"rotor\", parseInt(findCodeVal(value, \"T17\")), \"number\");\n};\n\nexport async function updateDeviceDetails(): Promise<void> {\n\tconst store = initStore();\n\ttry {\n\t\tconst { apiLevel, token, device: deviceCode, product } = store;\n\t\tif (token) {\n\t\t\tconst { sURL } = getSUrlUpdateDeviceId();\n\n\t\t\tconst response = await axios.post(sURL, getProtocolCodes(deviceCode), {\n\t\t\t\theaders: { \"x-token\": token },\n\t\t\t});\n\t\t\tstore._this.log.info(\"DeviceDetails: \" + JSON.stringify(response.data));\n\n\t\t\tif (parseInt(response.data.error_code) == 0) {\n\t\t\t\tlet responseValue: any;\n\t\t\t\tif (apiLevel < 3) {\n\t\t\t\t\tresponseValue = response.data.object_result;\n\t\t\t\t} else {\n\t\t\t\t\tresponseValue = response.data.objectResult;\n\t\t\t\t}\n\n\t\t\t\tsaveValue(\"rawJSON\", JSON.stringify(responseValue), \"string\");\n\n\t\t\t\tif (findCodeVal(responseValue, \"Power\") == \"1\") {\n\t\t\t\t\tsaveValues(responseValue, product);\n\t\t\t\t} else {\n\t\t\t\t\tsaveValue(\"consumption\", 0, \"number\");\n\t\t\t\t\tsaveValue(\"rotor\", 0, \"number\");\n\t\t\t\t}\n\n\t\t\t\t// Ziel-Temperatur Set_Temp\n\t\t\t\t//saveValue(\"tempSet\", parseFloat(findCodeVal(body.object_result, \"Set_Temp\")), \"number\");\n\n\t\t\t\t// Ziel-Temperatur anhand Modus\n\t\t\t\tif (findCodeVal(responseValue, \"Mode\") == 1) {\n\t\t\t\t\t// Heiz-Modus (-> R02)\n\t\t\t\t\tsaveValue(\"tempSet\", parseFloat(findCodeVal(responseValue, \"R02\")), \"number\");\n\t\t\t\t} else if (findCodeVal(response.data.object_result, \"Mode\") == 0) {\n\t\t\t\t\t// K\u00FChl-Modus (-> R01)\n\t\t\t\t\tsaveValue(\"tempSet\", parseFloat(findCodeVal(responseValue, \"R01\")), \"number\");\n\t\t\t\t} else if (findCodeVal(response.data.object_result, \"Mode\") == 2) {\n\t\t\t\t\t// Auto-Modus (-> R03)\n\t\t\t\t\tsaveValue(\"tempSet\", parseFloat(findCodeVal(responseValue, \"R03\")), \"number\");\n\t\t\t\t}\n\n\t\t\t\t// Fl\u00FCstermodus Manual-mute\n\t\t\t\tif (findCodeVal(responseValue, \"Manual-mute\") == \"1\") {\n\t\t\t\t\tsaveValue(\"silent\", true, \"boolean\");\n\t\t\t\t} else {\n\t\t\t\t\tsaveValue(\"silent\", false, \"boolean\");\n\t\t\t\t}\n\n\t\t\t\t// Zustand Power\n\t\t\t\tif (findCodeVal(responseValue, \"Power\") == \"1\") {\n\t\t\t\t\tsaveValue(\"state\", true, \"boolean\");\n\t\t\t\t\tsaveValue(\"mode\", findCodeVal(responseValue, \"Mode\"), \"string\");\n\t\t\t\t} else {\n\t\t\t\t\tsaveValue(\"state\", false, \"boolean\");\n\t\t\t\t\tsaveValue(\"mode\", \"-1\", \"string\");\n\t\t\t\t}\n\n\t\t\t\tsaveValue(\"info.connection\", true, \"boolean\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstore._this.log.error(\"Error: \" + JSON.stringify(response.data));\n\t\t\tsaveValue(\"info.connection\", false, \"boolean\");\n\t\t\t(store.token = \"\"), (store.device = \"\"), (store.reachable = false);\n\t\t\treturn;\n\t\t}\n\t\treturn;\n\t} catch (error: any) {\n\t\tstore._this.log.error(JSON.stringify(error));\n\t\tstore._this.log.error(JSON.stringify(error.stack));\n\t}\n}\n\nfunction findCodeVal(result: any, code: string): any {\n\t// printLog(\"Suche Wert \" + code, 1);\n\tfor (let i = 0; i < result.length; i++) {\n\t\t// printLog(result[i].code, 1);\n\t\tif (result[i].code.indexOf(code) >= 0) {\n\t\t\t// printLog(\"Wert gefunden: \" + result[i].value, 1);\n\t\t\treturn result[i].value;\n\t\t}\n\t}\n\treturn \"\";\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
