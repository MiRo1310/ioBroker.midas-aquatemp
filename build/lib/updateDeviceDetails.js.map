{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceDetails.ts"],
  "sourcesContent": ["import type { Modes } from '../types';\r\nimport { getHeaders, getProtocolCodes } from './axiosParameter';\r\nimport { getSUrlUpdateDeviceId } from './endPoints';\r\nimport { saveValue } from './saveValue';\r\nimport { initStore } from './store';\r\nimport { errorLogger } from './logging';\r\nimport type { MidasAquatemp } from '../main';\r\nimport { request } from './axios';\r\nimport type { DeviceDetails, ObjectResultResponse } from '../types/types';\r\n\r\nexport const numberToBoolean = (value: number): boolean => {\r\n    return value === 1;\r\n};\r\n\r\nconst saveValues = async (adapter: MidasAquatemp, value: any): Promise<void> => {\r\n    // Stromverbrauch T07 x T14 in Watt\r\n    await saveValue({\r\n        key: 'consumption',\r\n        value: parseFloat(findCodeVal(value, ['T07', 'T7'])) * parseFloat(findCodeVal(value, 'T14')),\r\n        stateType: 'number',\r\n        adapter: adapter,\r\n    });\r\n    // Luftansaug-Temperatur T01\r\n    await saveValue({\r\n        key: 'suctionTemp',\r\n        value: parseFloat(findCodeVal(value, ['T01', 'T1'])),\r\n        stateType: 'number',\r\n        adapter: adapter,\r\n    });\r\n    // Inlet-Temperatur T02\r\n    await saveValue({\r\n        key: 'tempIn',\r\n        value: parseFloat(findCodeVal(value, ['T02', 'T2'])),\r\n        stateType: 'number',\r\n        adapter: adapter,\r\n    });\r\n    // outlet-Temperatur T03\r\n    await saveValue({\r\n        key: 'tempOut',\r\n        value: parseFloat(findCodeVal(value, ['T03', 'T3'])),\r\n        stateType: 'number',\r\n        adapter: adapter,\r\n    });\r\n    // Coil-Temperatur T04\r\n    await saveValue({\r\n        key: 'coilTemp',\r\n        value: parseFloat(findCodeVal(value, ['T04', 'T4'])),\r\n        stateType: 'number',\r\n        adapter: adapter,\r\n    });\r\n    // Umgebungs-Temperatur T05\r\n    await saveValue({\r\n        key: 'ambient',\r\n        value: parseFloat(findCodeVal(value, ['T05', 'T5'])),\r\n        stateType: 'number',\r\n        adapter: adapter,\r\n    });\r\n    // Kompressorausgang-Temperatur T06\r\n    await saveValue({\r\n        key: 'exhaust',\r\n        value: parseFloat(findCodeVal(value, ['T06', 'T6'])),\r\n        stateType: 'number',\r\n        adapter: adapter,\r\n    });\r\n    // Str\u00F6mungsschalter S03\r\n    await saveValue({\r\n        key: 'flowSwitch',\r\n        value: numberToBoolean(findCodeVal(value, ['S03', 'S3'])),\r\n        stateType: 'boolean',\r\n        adapter: adapter,\r\n    });\r\n    // L\u00FCfter-Drehzahl T17\r\n    await saveValue({\r\n        key: 'rotor',\r\n        value: parseInt(findCodeVal(value, 'T17')),\r\n        stateType: 'number',\r\n        adapter: adapter,\r\n    });\r\n};\r\n\r\nexport async function updateDeviceDetails(adapter: MidasAquatemp): Promise<void> {\r\n    const store = initStore();\r\n    try {\r\n        const { token, device: deviceCode } = store;\r\n        if (!token || !deviceCode) {\r\n            return;\r\n        }\r\n\r\n        const { sURL } = getSUrlUpdateDeviceId();\r\n\r\n        const { data, error } = await request<DeviceDetails>(\r\n            adapter,\r\n            sURL,\r\n            getProtocolCodes(deviceCode),\r\n            getHeaders(token),\r\n        );\r\n\r\n        if (!data || error) {\r\n            store.resetOnErrorHandler();\r\n            return;\r\n        }\r\n\r\n        adapter.log.debug(`DeviceDetails: ${JSON.stringify(data)}`);\r\n\r\n        const responseValue = data.object_result ?? data.objectResult;\r\n        if (!responseValue || responseValue.length === 0) {\r\n            return;\r\n        }\r\n        await saveValue({\r\n            key: 'rawJSON',\r\n            value: JSON.stringify(responseValue),\r\n            stateType: 'string',\r\n            adapter: adapter,\r\n        });\r\n        await saveValues(adapter, responseValue);\r\n\r\n        const mode: number = findCodeVal(responseValue, 'Mode');\r\n        const modes: Modes = {\r\n            1: 'R02', // Heiz-Modus (-> R02)\r\n            0: 'R01', // K\u00FChl-Modus (-> R01)\r\n            2: 'R03', // Auto-Modus (-> R03)\r\n        };\r\n\r\n        await saveValue({\r\n            key: 'tempSet',\r\n            value: parseFloat(findCodeVal(responseValue, modes[mode])),\r\n            stateType: 'number',\r\n            adapter: adapter,\r\n        });\r\n\r\n        await saveValue({\r\n            key: 'silent',\r\n            value: findCodeVal(responseValue, 'Manual-mute') == '1',\r\n            stateType: 'boolean',\r\n            adapter: adapter,\r\n        });\r\n\r\n        const powerOpt = findCodeVal(responseValue, 'Power') === '1';\r\n\r\n        await saveValue({ key: 'state', value: powerOpt, stateType: 'boolean', adapter: adapter });\r\n        await saveValue({\r\n            key: 'mode',\r\n            value: powerOpt ? findCodeVal(responseValue, 'Mode') : '-1',\r\n            stateType: 'string',\r\n            adapter: adapter,\r\n        });\r\n\r\n        await saveValue({ key: 'info.connection', value: true, stateType: 'boolean', adapter: adapter });\r\n    } catch (error: any) {\r\n        errorLogger('Error updateDeviceDetails', error, adapter);\r\n    }\r\n}\r\n\r\nfunction findCodeVal(result: ObjectResultResponse, code: string | string[]): any {\r\n    if (!Array.isArray(code)) {\r\n        return result.find(item => item.code === code)?.value || '';\r\n    }\r\n    for (let i = 0; i < code.length; i++) {\r\n        const val = result.find(item => item.code === code[i])?.value;\r\n        if (val !== '0') {\r\n            return val;\r\n        }\r\n    }\r\n    return '0';\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
