{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceDetails.ts"],
  "sourcesContent": ["import axios from \"axios\";\nimport { Modes } from \"../types\";\nimport { getProtocolCodes } from \"./axiosParameter\";\nimport { getSUrlUpdateDeviceId } from \"./endPoints\";\nimport { saveValue } from \"./saveValue\";\nimport { initStore } from \"./store\";\n\nexport const numberToBoolean = (value: number): boolean => {\n\treturn value === 1;\n};\n\nconst saveValues = (value: any): void => {\n\t// Stromverbrauch T07 x T14 in Watt\n\tsaveValue(\n\t\t\"consumption\",\n\t\tparseFloat(findCodeVal(value, [\"T07\", \"T7\"])) * parseFloat(findCodeVal(value, \"T14\")),\n\t\t\"number\",\n\t);\n\t// Luftansaug-Temperatur T01\n\tsaveValue(\"suctionTemp\", parseFloat(findCodeVal(value, [\"T01\", \"T1\"])), \"number\");\n\t// Inlet-Temperatur T02\n\tsaveValue(\"tempIn\", parseFloat(findCodeVal(value, [\"T02\", \"T2\"])), \"number\");\n\t// outlet-Temperatur T03\n\tsaveValue(\"tempOut\", parseFloat(findCodeVal(value, [\"T03\", \"T3\"])), \"number\");\n\t// Coil-Temperatur T04\n\tsaveValue(\"coilTemp\", parseFloat(findCodeVal(value, [\"T04\", \"T4\"])), \"number\");\n\t// Umgebungs-Temperatur T05\n\tsaveValue(\"ambient\", parseFloat(findCodeVal(value, [\"T05\", \"T5\"])), \"number\");\n\t// Kompressorausgang-Temperatur T06\n\tsaveValue(\"exhaust\", parseFloat(findCodeVal(value, [\"T06\", \"T6\"])), \"number\");\n\t// Str\u00F6mungsschalter S03\n\tsaveValue(\"flowSwitch\", numberToBoolean(findCodeVal(value, [\"S03\", \"S3\"])), \"boolean\");\n\t// L\u00FCfter-Drehzahl T17\n\tsaveValue(\"rotor\", parseInt(findCodeVal(value, \"T17\")), \"number\");\n};\n\n\nexport async function updateDeviceDetails(): Promise<void> {\n\tconst store = initStore();\n\ttry {\n\t\tconst { apiLevel, token, device: deviceCode } = store;\n\t\tif (token) {\n\t\t\tconst { sURL } = getSUrlUpdateDeviceId();\n\n\t\t\tconst response = await axios.post(sURL, getProtocolCodes(deviceCode), {\n\t\t\t\theaders: { \"x-token\": token },\n\t\t\t});\n\t\t\tstore._this.log.info(\"DeviceDetails: \" + JSON.stringify(response.data));\n\n\t\t\tif (parseInt(response.data.error_code) == 0) {\n\t\t\t\tconst responseValue = apiLevel < 3 ? response.data.object_result : response.data.objectResult;\n\n\t\t\t\tsaveValue(\"rawJSON\", JSON.stringify(responseValue), \"string\");\n\t\t\t\tsaveValues(responseValue);\n\n\t\t\t\tconst mode: number = findCodeVal(responseValue, \"Mode\");\n\t\t\t\tconst modes: Modes = {\n\t\t\t\t\t1: \"R02\", // Heiz-Modus (-> R02)\n\t\t\t\t\t0: \"R01\", // K\u00FChl-Modus (-> R01)\n\t\t\t\t\t2: \"R03\", // Auto-Modus (-> R03)\n\t\t\t\t};\n\t\t\t\t// Ziel-Temperatur anhand Modus\n\t\t\t\tsaveValue(\"tempSet\", parseFloat(findCodeVal(responseValue, modes[mode])), \"number\");\n\n\t\t\t\t// Fl\u00FCstermodus Manual-mute\n\t\t\t\tsaveValue(\"silent\", findCodeVal(responseValue, \"Manual-mute\") == \"1\", \"boolean\");\n\n\t\t\t\t// Zustand Power\n\t\t\t\tif (findCodeVal(responseValue, \"Power\") == \"1\") {\n\t\t\t\t\tsaveValue(\"state\", true, \"boolean\");\n\t\t\t\t\tsaveValue(\"mode\", findCodeVal(responseValue, \"Mode\"), \"string\");\n\t\t\t\t} else {\n\t\t\t\t\tsaveValue(\"state\", false, \"boolean\");\n\t\t\t\t\tsaveValue(\"mode\", \"-1\", \"string\");\n\t\t\t\t}\n\n\t\t\t\tsaveValue(\"info.connection\", true, \"boolean\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstore._this.log.error(\"Error: \" + JSON.stringify(response.data));\n\t\t\tstore.resetOnErrorHandler();\n\t\t\treturn;\n\t\t}\n\t\treturn;\n\t} catch (error: any) {\n\t\tstore._this.log.error(JSON.stringify(error));\n\t\tstore._this.log.error(JSON.stringify(error.stack));\n\t}\n}\n\nfunction findCodeVal(result: { value: string; code: string }[], code: string | string[]): any {\n\tif (!Array.isArray(code)) {\n\t\treturn result.find((item) => item.code === code)?.value || \"\";\n\t}\n\tfor (let i = 0; i < code.length; i++) {\n\t\tconst val = result.find((item) => item.code === code[i])?.value;\n\t\tif (val !== \"0\") {\n\t\t\treturn val;\n\t\t}\n\t}\n\treturn \"0\";\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
