{
  "version": 3,
  "sources": ["../../src/lib/token.ts"],
  "sourcesContent": ["import axios from 'axios';\r\nimport { saveValue } from './saveValue';\r\nimport { useStore } from './store';\r\nimport { updateDeviceID } from './updateDeviceId';\r\n\r\nconst store = useStore();\r\n\r\n\r\nasync function getToken(): Promise<void> {\r\n    const _this = store._this\r\n    try {\r\n        const { token, apiLevel, cloudURL, encryptedPassword } = store;\r\n\r\n        if (!token) {\r\n            _this.log.info(\"Request token\");\r\n            var options;\r\n            var sUrl = \"\";\r\n            const username = store.username;\r\n\r\n            if (apiLevel < 3) {\r\n                sUrl = cloudURL + '/app/user/login.json';\r\n                options = {\r\n                    \"user_name\": username, \"password\": encryptedPassword, \"type\": \"2\"\r\n                };\r\n            } else {\r\n                sUrl = cloudURL + '/app/user/login';\r\n                options = {\r\n                    \"userName\": username, \"password\": encryptedPassword, \"type\": \"2\"\r\n                };\r\n            }\r\n\r\n            const response = await axios.post(sUrl, options)\r\n\r\n\r\n            if (response.status == 200) {\r\n                if (apiLevel < 3) {\r\n                    store.token = response.data?.object_result?.[\"x-token\"];\r\n                } else {\r\n                    store.token = response.data?.objectResult?.[\"x-token\"];\r\n\r\n                }\r\n                _this.log.info(\"Login ok! Token: \" + token);\r\n                return\r\n            }\r\n\r\n            _this.log.error(\"Login-error: \" + response.data);\r\n            store.token = null;\r\n            return\r\n        }\r\n        return;\r\n    }\r\n    catch (error) {\r\n        _this.log.error(\"Error in getToken(): \" + error);\r\n    }\r\n}\r\n\r\nexport const updateToken = async (): Promise<void> => {\r\n    await getToken();\r\n\r\n    if (store.token) {\r\n        await updateDeviceID()\r\n        return\r\n    }\r\n\r\n    store.resetOnErrorHandler();\r\n    return\r\n}\r\n\r\n\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAElB,mBAAyB;AACzB,4BAA+B;AAE/B,MAAM,YAAQ,uBAAS;AAGvB,eAAe,WAA0B;AARzC;AASI,QAAM,QAAQ,MAAM;AACpB,MAAI;AACA,UAAM,EAAE,OAAO,UAAU,UAAU,kBAAkB,IAAI;AAEzD,QAAI,CAAC,OAAO;AACR,YAAM,IAAI,KAAK,eAAe;AAC9B,UAAI;AACJ,UAAI,OAAO;AACX,YAAM,WAAW,MAAM;AAEvB,UAAI,WAAW,GAAG;AACd,eAAO,WAAW;AAClB,kBAAU;AAAA,UACN,aAAa;AAAA,UAAU,YAAY;AAAA,UAAmB,QAAQ;AAAA,QAClE;AAAA,MACJ,OAAO;AACH,eAAO,WAAW;AAClB,kBAAU;AAAA,UACN,YAAY;AAAA,UAAU,YAAY;AAAA,UAAmB,QAAQ;AAAA,QACjE;AAAA,MACJ;AAEA,YAAM,WAAW,MAAM,aAAAA,QAAM,KAAK,MAAM,OAAO;AAG/C,UAAI,SAAS,UAAU,KAAK;AACxB,YAAI,WAAW,GAAG;AACd,gBAAM,SAAQ,oBAAS,SAAT,mBAAe,kBAAf,mBAA+B;AAAA,QACjD,OAAO;AACH,gBAAM,SAAQ,oBAAS,SAAT,mBAAe,iBAAf,mBAA8B;AAAA,QAEhD;AACA,cAAM,IAAI,KAAK,sBAAsB,KAAK;AAC1C;AAAA,MACJ;AAEA,YAAM,IAAI,MAAM,kBAAkB,SAAS,IAAI;AAC/C,YAAM,QAAQ;AACd;AAAA,IACJ;AACA;AAAA,EACJ,SACO,OAAO;AACV,UAAM,IAAI,MAAM,0BAA0B,KAAK;AAAA,EACnD;AACJ;AAEO,MAAM,cAAc,YAA2B;AAClD,QAAM,SAAS;AAEf,MAAI,MAAM,OAAO;AACb,cAAM,sCAAe;AACrB;AAAA,EACJ;AAEA,QAAM,oBAAoB;AAC1B;AACJ;",
  "names": ["axios"]
}
