{
  "version": 3,
  "sources": ["../../src/lib/token.ts"],
  "sourcesContent": ["import axios from 'axios';\nimport { getOptionsAndSUrl } from './endPoints';\nimport { initStore as useStore } from './store';\nimport { updateDeviceID } from './updateDeviceId';\nimport { updateDeviceStatus } from './updateDeviceStatus';\nimport { errorLogger } from './logging';\n\nasync function getToken(): Promise<void> {\n    const store = useStore();\n    const _this = store._this;\n    try {\n        const { token, apiLevel } = store;\n\n        if (!token) {\n            _this.log.debug('Request token');\n            const { sUrl, options } = getOptionsAndSUrl();\n\n            const response = await axios.post(sUrl, options);\n            if (!response) {\n                _this.log.error('No response from server');\n                return;\n            }\n            if (response.status == 200) {\n                store.token =\n                    apiLevel < 3\n                        ? response.data?.object_result?.['x-token']\n                        : (store.token = response.data?.objectResult?.['x-token']);\n                if (store.token) {\n                    _this.log.debug('Login ok! Token');\n                } else {\n                    _this.log.error(`Login-error: ${JSON.stringify(response.data)}`);\n                }\n\n                return;\n            }\n\n            _this.log.error(`Login-error: ${response.data}`);\n            store.resetOnErrorHandler();\n            return;\n        }\n    } catch (error) {\n        errorLogger('Error in getToken', error, store._this);\n    }\n}\n\nexport const updateToken = async (): Promise<void> => {\n    const store = useStore();\n    try {\n        await getToken();\n\n        if (!store.token) {\n            store.resetOnErrorHandler();\n            return;\n        }\n        if (store.useDeviceMac) {\n            await updateDeviceStatus();\n            return;\n        }\n        await updateDeviceID();\n        return;\n    } catch (error: any) {\n        errorLogger('Error in updateToken', error, store._this);\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,uBAAkC;AAClC,mBAAsC;AACtC,4BAA+B;AAC/B,gCAAmC;AACnC,qBAA4B;AAE5B,eAAe,WAA0B;AAPzC;AAQI,QAAM,YAAQ,aAAAA,WAAS;AACvB,QAAM,QAAQ,MAAM;AACpB,MAAI;AACA,UAAM,EAAE,OAAO,SAAS,IAAI;AAE5B,QAAI,CAAC,OAAO;AACR,YAAM,IAAI,MAAM,eAAe;AAC/B,YAAM,EAAE,MAAM,QAAQ,QAAI,oCAAkB;AAE5C,YAAM,WAAW,MAAM,aAAAC,QAAM,KAAK,MAAM,OAAO;AAC/C,UAAI,CAAC,UAAU;AACX,cAAM,IAAI,MAAM,yBAAyB;AACzC;AAAA,MACJ;AACA,UAAI,SAAS,UAAU,KAAK;AACxB,cAAM,QACF,WAAW,KACL,oBAAS,SAAT,mBAAe,kBAAf,mBAA+B,aAC9B,MAAM,SAAQ,oBAAS,SAAT,mBAAe,iBAAf,mBAA8B;AACvD,YAAI,MAAM,OAAO;AACb,gBAAM,IAAI,MAAM,iBAAiB;AAAA,QACrC,OAAO;AACH,gBAAM,IAAI,MAAM,gBAAgB,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAAA,QACnE;AAEA;AAAA,MACJ;AAEA,YAAM,IAAI,MAAM,gBAAgB,SAAS,IAAI,EAAE;AAC/C,YAAM,oBAAoB;AAC1B;AAAA,IACJ;AAAA,EACJ,SAAS,OAAO;AACZ,oCAAY,qBAAqB,OAAO,MAAM,KAAK;AAAA,EACvD;AACJ;AAEO,MAAM,cAAc,YAA2B;AAClD,QAAM,YAAQ,aAAAD,WAAS;AACvB,MAAI;AACA,UAAM,SAAS;AAEf,QAAI,CAAC,MAAM,OAAO;AACd,YAAM,oBAAoB;AAC1B;AAAA,IACJ;AACA,QAAI,MAAM,cAAc;AACpB,gBAAM,8CAAmB;AACzB;AAAA,IACJ;AACA,cAAM,sCAAe;AACrB;AAAA,EACJ,SAAS,OAAY;AACjB,oCAAY,wBAAwB,OAAO,MAAM,KAAK;AAAA,EAC1D;AACJ;",
  "names": ["useStore", "axios"]
}
