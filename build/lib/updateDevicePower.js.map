{
  "version": 3,
  "sources": ["../../src/lib/updateDevicePower.ts"],
  "sourcesContent": ["import { getPowerMode } from './getSettings';\nimport { initStore } from './store';\nimport { getSUrl } from './endPoints';\nimport { getAxiosUpdateDevicePowerParams } from './axiosParameter';\nimport { saveValue } from './saveValue';\nimport { errorLogger } from './logging';\nimport type { MidasAquatemp } from '../main';\nimport { request } from './axios';\n\nexport async function updateDevicePower(adapter: MidasAquatemp, deviceCode: string, power: number): Promise<void> {\n    const store = initStore();\n    try {\n        const token = store.token;\n        const { powerMode, powerOpt } = getPowerMode(power);\n        if (powerOpt === null || powerMode === null) {\n            return;\n        }\n        if (token && token != '') {\n            const { sURL } = getSUrl();\n            const response = await request(\n                adapter,\n                sURL,\n                getAxiosUpdateDevicePowerParams({ deviceCode, value: powerOpt, protocolCode: 'Power' }),\n                {\n                    headers: { 'x-token': token },\n                },\n            );\n            if (!response?.data) {\n                return;\n            }\n            adapter.log.debug(`DeviceStatus: ${JSON.stringify(response.data)}`);\n            if (parseInt(response.data.error_code) == 0) {\n                await saveValue({ key: 'mode', value: power.toString(), stateType: 'string', adapter: adapter });\n                if (power >= 0) {\n                    await updateDeviceMode(adapter, store.device, power);\n                }\n                return;\n            }\n            adapter.log.error(`Error: ${JSON.stringify(response.data)}`);\n            store.resetOnErrorHandler();\n        }\n    } catch (error: any) {\n        errorLogger('Error in updateDevicePower', error, adapter);\n    }\n}\n\nasync function updateDeviceMode(adapter: MidasAquatemp, deviceCode: string, mode: any): Promise<void> {\n    const store = initStore();\n    const token = store.token;\n    try {\n        if (token && token != '') {\n            const { sURL } = getSUrl();\n            const response = await request(\n                adapter,\n                sURL,\n                getAxiosUpdateDevicePowerParams({ deviceCode: deviceCode, value: mode, protocolCode: 'mode' }),\n                {\n                    headers: { 'x-token': token },\n                },\n            );\n            if (!response?.data) {\n                return;\n            }\n            adapter.log.debug(`DeviceStatus: ${JSON.stringify(response.data)}`);\n\n            if (parseInt(response.data.error_code) == 0) {\n                await saveValue({ key: 'mode', value: mode, stateType: 'string', adapter: adapter });\n                return;\n            }\n            adapter.log.error(`Error: ${JSON.stringify(response.data)}`);\n            store.resetOnErrorHandler();\n        }\n    } catch (error: any) {\n        errorLogger('Error in updateDeviceMode', error, adapter);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA6B;AAC7B,mBAA0B;AAC1B,uBAAwB;AACxB,4BAAgD;AAChD,uBAA0B;AAC1B,qBAA4B;AAE5B,mBAAwB;AAExB,eAAsB,kBAAkB,SAAwB,YAAoB,OAA8B;AAC9G,QAAM,YAAQ,wBAAU;AACxB,MAAI;AACA,UAAM,QAAQ,MAAM;AACpB,UAAM,EAAE,WAAW,SAAS,QAAI,iCAAa,KAAK;AAClD,QAAI,aAAa,QAAQ,cAAc,MAAM;AACzC;AAAA,IACJ;AACA,QAAI,SAAS,SAAS,IAAI;AACtB,YAAM,EAAE,KAAK,QAAI,0BAAQ;AACzB,YAAM,WAAW,UAAM;AAAA,QACnB;AAAA,QACA;AAAA,YACA,uDAAgC,EAAE,YAAY,OAAO,UAAU,cAAc,QAAQ,CAAC;AAAA,QACtF;AAAA,UACI,SAAS,EAAE,WAAW,MAAM;AAAA,QAChC;AAAA,MACJ;AACA,UAAI,EAAC,qCAAU,OAAM;AACjB;AAAA,MACJ;AACA,cAAQ,IAAI,MAAM,iBAAiB,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAClE,UAAI,SAAS,SAAS,KAAK,UAAU,KAAK,GAAG;AACzC,kBAAM,4BAAU,EAAE,KAAK,QAAQ,OAAO,MAAM,SAAS,GAAG,WAAW,UAAU,QAAiB,CAAC;AAC/F,YAAI,SAAS,GAAG;AACZ,gBAAM,iBAAiB,SAAS,MAAM,QAAQ,KAAK;AAAA,QACvD;AACA;AAAA,MACJ;AACA,cAAQ,IAAI,MAAM,UAAU,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAC3D,YAAM,oBAAoB;AAAA,IAC9B;AAAA,EACJ,SAAS,OAAY;AACjB,oCAAY,8BAA8B,OAAO,OAAO;AAAA,EAC5D;AACJ;AAEA,eAAe,iBAAiB,SAAwB,YAAoB,MAA0B;AAClG,QAAM,YAAQ,wBAAU;AACxB,QAAM,QAAQ,MAAM;AACpB,MAAI;AACA,QAAI,SAAS,SAAS,IAAI;AACtB,YAAM,EAAE,KAAK,QAAI,0BAAQ;AACzB,YAAM,WAAW,UAAM;AAAA,QACnB;AAAA,QACA;AAAA,YACA,uDAAgC,EAAE,YAAwB,OAAO,MAAM,cAAc,OAAO,CAAC;AAAA,QAC7F;AAAA,UACI,SAAS,EAAE,WAAW,MAAM;AAAA,QAChC;AAAA,MACJ;AACA,UAAI,EAAC,qCAAU,OAAM;AACjB;AAAA,MACJ;AACA,cAAQ,IAAI,MAAM,iBAAiB,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAElE,UAAI,SAAS,SAAS,KAAK,UAAU,KAAK,GAAG;AACzC,kBAAM,4BAAU,EAAE,KAAK,QAAQ,OAAO,MAAM,WAAW,UAAU,QAAiB,CAAC;AACnF;AAAA,MACJ;AACA,cAAQ,IAAI,MAAM,UAAU,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAC3D,YAAM,oBAAoB;AAAA,IAC9B;AAAA,EACJ,SAAS,OAAY;AACjB,oCAAY,6BAA6B,OAAO,OAAO;AAAA,EAC3D;AACJ;",
  "names": []
}
