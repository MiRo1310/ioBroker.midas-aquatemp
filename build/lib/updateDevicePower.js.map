{
  "version": 3,
  "sources": ["../../src/lib/updateDevicePower.ts"],
  "sourcesContent": ["import { getPowerMode } from './getSettings';\r\nimport { initStore } from './store';\r\nimport { getSUrl } from './endPoints';\r\nimport { getAxiosUpdateDevicePowerParams, getHeaders } from './axiosParameter';\r\nimport { saveValue } from './saveValue';\r\nimport { errorLogger } from './logging';\r\nimport type { MidasAquatemp } from '../main';\r\nimport { request } from './axios';\r\nimport type { MidasData } from '../types/types';\r\nimport { isDefined, isToken } from './utils';\r\n\r\nexport async function updateDevicePower(adapter: MidasAquatemp, deviceCode: string, power: number): Promise<void> {\r\n    const store = initStore();\r\n    try {\r\n        const token = store.token;\r\n        const { powerMode, powerOpt } = getPowerMode(power);\r\n\r\n        if (!isDefined(powerOpt) || !isDefined(powerMode) || !store.device || !isToken(token)) {\r\n            return;\r\n        }\r\n\r\n        const { sURL } = getSUrl();\r\n        const { data, error } = await request<MidasData>(\r\n            adapter,\r\n            sURL,\r\n            getAxiosUpdateDevicePowerParams({ deviceCode, value: powerOpt, protocolCode: 'Power' }),\r\n            getHeaders(token),\r\n        );\r\n        if (!data || error) {\r\n            store.resetOnErrorHandler();\r\n            return;\r\n        }\r\n        adapter.log.debug(`DeviceStatus: ${JSON.stringify(data)}`);\r\n\r\n        await saveValue({ key: 'mode', value: power.toString(), stateType: 'string', adapter: adapter });\r\n        if (power >= 0) {\r\n            await updateDeviceMode(adapter, store.device, power);\r\n        }\r\n    } catch (error: any) {\r\n        errorLogger('Error in updateDevicePower', error, adapter);\r\n    }\r\n}\r\n\r\nasync function updateDeviceMode(adapter: MidasAquatemp, deviceCode: string, mode: any): Promise<void> {\r\n    const store = initStore();\r\n    const token = store.token;\r\n    try {\r\n        if (token && token != '') {\r\n            const { sURL } = getSUrl();\r\n            const { data, error } = await request<MidasData>(\r\n                adapter,\r\n                sURL,\r\n                getAxiosUpdateDevicePowerParams({ deviceCode: deviceCode, value: mode, protocolCode: 'mode' }),\r\n                {\r\n                    headers: { 'x-token': token },\r\n                },\r\n            );\r\n            if (!data || error) {\r\n                store.resetOnErrorHandler();\r\n                return;\r\n            }\r\n            adapter.log.debug(`DeviceStatus: ${JSON.stringify(data)}`);\r\n\r\n            await saveValue({ key: 'mode', value: mode, stateType: 'string', adapter: adapter });\r\n        }\r\n    } catch (error: any) {\r\n        errorLogger('Error in updateDeviceMode', error, adapter);\r\n    }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA6B;AAC7B,mBAA0B;AAC1B,uBAAwB;AACxB,4BAA4D;AAC5D,uBAA0B;AAC1B,qBAA4B;AAE5B,mBAAwB;AAExB,mBAAmC;AAEnC,eAAsB,kBAAkB,SAAwB,YAAoB,OAA8B;AAC9G,QAAM,YAAQ,wBAAU;AACxB,MAAI;AACA,UAAM,QAAQ,MAAM;AACpB,UAAM,EAAE,WAAW,SAAS,QAAI,iCAAa,KAAK;AAElD,QAAI,KAAC,wBAAU,QAAQ,KAAK,KAAC,wBAAU,SAAS,KAAK,CAAC,MAAM,UAAU,KAAC,sBAAQ,KAAK,GAAG;AACnF;AAAA,IACJ;AAEA,UAAM,EAAE,KAAK,QAAI,0BAAQ;AACzB,UAAM,EAAE,MAAM,MAAM,IAAI,UAAM;AAAA,MAC1B;AAAA,MACA;AAAA,UACA,uDAAgC,EAAE,YAAY,OAAO,UAAU,cAAc,QAAQ,CAAC;AAAA,UACtF,kCAAW,KAAK;AAAA,IACpB;AACA,QAAI,CAAC,QAAQ,OAAO;AAChB,YAAM,oBAAoB;AAC1B;AAAA,IACJ;AACA,YAAQ,IAAI,MAAM,iBAAiB,KAAK,UAAU,IAAI,CAAC,EAAE;AAEzD,cAAM,4BAAU,EAAE,KAAK,QAAQ,OAAO,MAAM,SAAS,GAAG,WAAW,UAAU,QAAiB,CAAC;AAC/F,QAAI,SAAS,GAAG;AACZ,YAAM,iBAAiB,SAAS,MAAM,QAAQ,KAAK;AAAA,IACvD;AAAA,EACJ,SAAS,OAAY;AACjB,oCAAY,8BAA8B,OAAO,OAAO;AAAA,EAC5D;AACJ;AAEA,eAAe,iBAAiB,SAAwB,YAAoB,MAA0B;AAClG,QAAM,YAAQ,wBAAU;AACxB,QAAM,QAAQ,MAAM;AACpB,MAAI;AACA,QAAI,SAAS,SAAS,IAAI;AACtB,YAAM,EAAE,KAAK,QAAI,0BAAQ;AACzB,YAAM,EAAE,MAAM,MAAM,IAAI,UAAM;AAAA,QAC1B;AAAA,QACA;AAAA,YACA,uDAAgC,EAAE,YAAwB,OAAO,MAAM,cAAc,OAAO,CAAC;AAAA,QAC7F;AAAA,UACI,SAAS,EAAE,WAAW,MAAM;AAAA,QAChC;AAAA,MACJ;AACA,UAAI,CAAC,QAAQ,OAAO;AAChB,cAAM,oBAAoB;AAC1B;AAAA,MACJ;AACA,cAAQ,IAAI,MAAM,iBAAiB,KAAK,UAAU,IAAI,CAAC,EAAE;AAEzD,gBAAM,4BAAU,EAAE,KAAK,QAAQ,OAAO,MAAM,WAAW,UAAU,QAAiB,CAAC;AAAA,IACvF;AAAA,EACJ,SAAS,OAAY;AACjB,oCAAY,6BAA6B,OAAO,OAAO;AAAA,EAC3D;AACJ;",
  "names": []
}
