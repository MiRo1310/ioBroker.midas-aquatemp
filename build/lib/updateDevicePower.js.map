{
  "version": 3,
  "sources": ["../../src/lib/updateDevicePower.ts"],
  "sourcesContent": ["import { getPowerMode } from \"./getSettings\";\nimport { initStore } from \"./store\";\nimport { getSUrl } from \"./endPoints\";\nimport { getAxiosUpdateDevicePowerParams } from \"./axiosParameter\";\nimport { saveValue } from \"./saveValue\";\nimport axios from \"axios\";\nexport async function updateDevicePower(deviceCode: string, power: number): Promise<void> {\n\tconst store = initStore();\n\ttry {\n\t\tconst token = store.token;\n\t\tconst { powerMode, powerOpt } = getPowerMode(power);\n\t\tif (powerOpt === null || powerMode === null) {\n\t\t\treturn;\n\t\t}\n\t\tif (token && token != \"\") {\n\t\t\tconst { sURL } = getSUrl();\n\t\t\tconst response = await axios.post(\n\t\t\t\tsURL,\n\t\t\t\tgetAxiosUpdateDevicePowerParams({ deviceCode, value: powerOpt, protocolCode: \"Power\" }),\n\t\t\t\t{\n\t\t\t\t\theaders: { \"x-token\": token },\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tstore._this.log.info(\"DeviceStatus: \" + JSON.stringify(response.data));\n\t\t\tif (parseInt(response.data.error_code) == 0) {\n\t\t\t\tsaveValue(\"mode\", power.toString(), \"string\");\n\t\t\t\tif (power >= 0) updateDeviceMode(store.device, power);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tstore._this.log.error(\"Error: \" + JSON.stringify(response.data));\n\t\t\tstore.resetOnErrorHandler();\n\t\t}\n\t} catch (error: any) {\n\t\tstore._this.log.error(JSON.stringify(error));\n\t\tstore._this.log.error(JSON.stringify(error.stack));\n\t}\n}\n\nasync function updateDeviceMode(deviceCode: string, mode: any): Promise<void> {\n\tconst store = initStore();\n\tconst token = store.token;\n\ttry {\n\t\tif (token && token != \"\") {\n\t\t\tconst { sURL } = getSUrl();\n\t\t\tconst response = await axios.post(\n\t\t\t\tsURL,\n\t\t\t\tgetAxiosUpdateDevicePowerParams({ deviceCode: deviceCode, value: mode, protocolCode: \"mode\" }),\n\t\t\t\t{\n\t\t\t\t\theaders: { \"x-token\": token },\n\t\t\t\t},\n\t\t\t);\n\t\t\tstore._this.log.info(\"DeviceStatus: \" + JSON.stringify(response.data));\n\n\t\t\tif (parseInt(response.data.error_code) == 0) {\n\t\t\t\tsaveValue(\"mode\", mode, \"string\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tstore._this.log.error(\"Error: \" + JSON.stringify(response.data));\n\t\t\tstore.resetOnErrorHandler();\n\t\t}\n\t} catch (error: any) {\n\t\tstore._this.log.error(JSON.stringify(error));\n\t\tstore._this.log.error(JSON.stringify(error.stack));\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA6B;AAC7B,mBAA0B;AAC1B,uBAAwB;AACxB,4BAAgD;AAChD,uBAA0B;AAC1B,mBAAkB;AAClB,eAAsB,kBAAkB,YAAoB,OAA8B;AACzF,QAAM,YAAQ,wBAAU;AACxB,MAAI;AACH,UAAM,QAAQ,MAAM;AACpB,UAAM,EAAE,WAAW,SAAS,QAAI,iCAAa,KAAK;AAClD,QAAI,aAAa,QAAQ,cAAc,MAAM;AAC5C;AAAA,IACD;AACA,QAAI,SAAS,SAAS,IAAI;AACzB,YAAM,EAAE,KAAK,QAAI,0BAAQ;AACzB,YAAM,WAAW,MAAM,aAAAA,QAAM;AAAA,QAC5B;AAAA,YACA,uDAAgC,EAAE,YAAY,OAAO,UAAU,cAAc,QAAQ,CAAC;AAAA,QACtF;AAAA,UACC,SAAS,EAAE,WAAW,MAAM;AAAA,QAC7B;AAAA,MACD;AAEA,YAAM,MAAM,IAAI,KAAK,mBAAmB,KAAK,UAAU,SAAS,IAAI,CAAC;AACrE,UAAI,SAAS,SAAS,KAAK,UAAU,KAAK,GAAG;AAC5C,wCAAU,QAAQ,MAAM,SAAS,GAAG,QAAQ;AAC5C,YAAI,SAAS;AAAG,2BAAiB,MAAM,QAAQ,KAAK;AACpD;AAAA,MACD;AACA,YAAM,MAAM,IAAI,MAAM,YAAY,KAAK,UAAU,SAAS,IAAI,CAAC;AAC/D,YAAM,oBAAoB;AAAA,IAC3B;AAAA,EACD,SAAS,OAAY;AACpB,UAAM,MAAM,IAAI,MAAM,KAAK,UAAU,KAAK,CAAC;AAC3C,UAAM,MAAM,IAAI,MAAM,KAAK,UAAU,MAAM,KAAK,CAAC;AAAA,EAClD;AACD;AAEA,eAAe,iBAAiB,YAAoB,MAA0B;AAC7E,QAAM,YAAQ,wBAAU;AACxB,QAAM,QAAQ,MAAM;AACpB,MAAI;AACH,QAAI,SAAS,SAAS,IAAI;AACzB,YAAM,EAAE,KAAK,QAAI,0BAAQ;AACzB,YAAM,WAAW,MAAM,aAAAA,QAAM;AAAA,QAC5B;AAAA,YACA,uDAAgC,EAAE,YAAwB,OAAO,MAAM,cAAc,OAAO,CAAC;AAAA,QAC7F;AAAA,UACC,SAAS,EAAE,WAAW,MAAM;AAAA,QAC7B;AAAA,MACD;AACA,YAAM,MAAM,IAAI,KAAK,mBAAmB,KAAK,UAAU,SAAS,IAAI,CAAC;AAErE,UAAI,SAAS,SAAS,KAAK,UAAU,KAAK,GAAG;AAC5C,wCAAU,QAAQ,MAAM,QAAQ;AAChC;AAAA,MACD;AACA,YAAM,MAAM,IAAI,MAAM,YAAY,KAAK,UAAU,SAAS,IAAI,CAAC;AAC/D,YAAM,oBAAoB;AAAA,IAC3B;AAAA,EACD,SAAS,OAAY;AACpB,UAAM,MAAM,IAAI,MAAM,KAAK,UAAU,KAAK,CAAC;AAC3C,UAAM,MAAM,IAAI,MAAM,KAAK,UAAU,MAAM,KAAK,CAAC;AAAA,EAClD;AACD;",
  "names": ["axios"]
}
