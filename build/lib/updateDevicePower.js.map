{
  "version": 3,
  "sources": ["../../src/lib/updateDevicePower.ts"],
  "sourcesContent": ["import { getPowerMode } from './getSettings';\r\nimport { initStore } from './store';\r\nimport { getSUrl } from './endPoints';\r\nimport { getAxiosUpdateDevicePowerParams } from './axiosParameter';\r\nimport { saveValue } from './saveValue';\r\nimport axios from 'axios';\r\nimport { errorLogger } from './logging';\r\n\r\nexport async function updateDevicePower(deviceCode: string, power: number): Promise<void> {\r\n    const store = initStore();\r\n    try {\r\n        const token = store.token;\r\n        const { powerMode, powerOpt } = getPowerMode(power);\r\n        if (powerOpt === null || powerMode === null) {\r\n            return;\r\n        }\r\n        if (token && token != '') {\r\n            const { sURL } = getSUrl();\r\n            const response = await axios.post(\r\n                sURL,\r\n                getAxiosUpdateDevicePowerParams({ deviceCode, value: powerOpt, protocolCode: 'Power' }),\r\n                {\r\n                    headers: { 'x-token': token },\r\n                },\r\n            );\r\n\r\n            store._this.log.debug(`DeviceStatus: ${JSON.stringify(response.data)}`);\r\n            if (parseInt(response.data.error_code) == 0) {\r\n                await saveValue('mode', power.toString(), 'string');\r\n                if (power >= 0) {\r\n                    await updateDeviceMode(store.device, power);\r\n                }\r\n                return;\r\n            }\r\n            store._this.log.error(`Error: ${JSON.stringify(response.data)}`);\r\n            store.resetOnErrorHandler();\r\n        }\r\n    } catch (error: any) {\r\n        store._this.log.error(JSON.stringify(error));\r\n        store._this.log.error(JSON.stringify(error.stack));\r\n    }\r\n}\r\n\r\nasync function updateDeviceMode(deviceCode: string, mode: any): Promise<void> {\r\n    const store = initStore();\r\n    const token = store.token;\r\n    try {\r\n        if (token && token != '') {\r\n            const { sURL } = getSUrl();\r\n            const response = await axios.post(\r\n                sURL,\r\n                getAxiosUpdateDevicePowerParams({ deviceCode: deviceCode, value: mode, protocolCode: 'mode' }),\r\n                {\r\n                    headers: { 'x-token': token },\r\n                },\r\n            );\r\n            store._this.log.debug(`DeviceStatus: ${JSON.stringify(response.data)}`);\r\n\r\n            if (parseInt(response.data.error_code) == 0) {\r\n                await saveValue('mode', mode, 'string');\r\n                return;\r\n            }\r\n            store._this.log.error(`Error: ${JSON.stringify(response.data)}`);\r\n            store.resetOnErrorHandler();\r\n        }\r\n    } catch (error: any) {\r\n        errorLogger('Error in updateDeviceMode', error, store._this);\r\n    }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA6B;AAC7B,mBAA0B;AAC1B,uBAAwB;AACxB,4BAAgD;AAChD,uBAA0B;AAC1B,mBAAkB;AAClB,qBAA4B;AAE5B,eAAsB,kBAAkB,YAAoB,OAA8B;AACtF,QAAM,YAAQ,wBAAU;AACxB,MAAI;AACA,UAAM,QAAQ,MAAM;AACpB,UAAM,EAAE,WAAW,SAAS,QAAI,iCAAa,KAAK;AAClD,QAAI,aAAa,QAAQ,cAAc,MAAM;AACzC;AAAA,IACJ;AACA,QAAI,SAAS,SAAS,IAAI;AACtB,YAAM,EAAE,KAAK,QAAI,0BAAQ;AACzB,YAAM,WAAW,MAAM,aAAAA,QAAM;AAAA,QACzB;AAAA,YACA,uDAAgC,EAAE,YAAY,OAAO,UAAU,cAAc,QAAQ,CAAC;AAAA,QACtF;AAAA,UACI,SAAS,EAAE,WAAW,MAAM;AAAA,QAChC;AAAA,MACJ;AAEA,YAAM,MAAM,IAAI,MAAM,iBAAiB,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AACtE,UAAI,SAAS,SAAS,KAAK,UAAU,KAAK,GAAG;AACzC,kBAAM,4BAAU,QAAQ,MAAM,SAAS,GAAG,QAAQ;AAClD,YAAI,SAAS,GAAG;AACZ,gBAAM,iBAAiB,MAAM,QAAQ,KAAK;AAAA,QAC9C;AACA;AAAA,MACJ;AACA,YAAM,MAAM,IAAI,MAAM,UAAU,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAC/D,YAAM,oBAAoB;AAAA,IAC9B;AAAA,EACJ,SAAS,OAAY;AACjB,UAAM,MAAM,IAAI,MAAM,KAAK,UAAU,KAAK,CAAC;AAC3C,UAAM,MAAM,IAAI,MAAM,KAAK,UAAU,MAAM,KAAK,CAAC;AAAA,EACrD;AACJ;AAEA,eAAe,iBAAiB,YAAoB,MAA0B;AAC1E,QAAM,YAAQ,wBAAU;AACxB,QAAM,QAAQ,MAAM;AACpB,MAAI;AACA,QAAI,SAAS,SAAS,IAAI;AACtB,YAAM,EAAE,KAAK,QAAI,0BAAQ;AACzB,YAAM,WAAW,MAAM,aAAAA,QAAM;AAAA,QACzB;AAAA,YACA,uDAAgC,EAAE,YAAwB,OAAO,MAAM,cAAc,OAAO,CAAC;AAAA,QAC7F;AAAA,UACI,SAAS,EAAE,WAAW,MAAM;AAAA,QAChC;AAAA,MACJ;AACA,YAAM,MAAM,IAAI,MAAM,iBAAiB,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAEtE,UAAI,SAAS,SAAS,KAAK,UAAU,KAAK,GAAG;AACzC,kBAAM,4BAAU,QAAQ,MAAM,QAAQ;AACtC;AAAA,MACJ;AACA,YAAM,MAAM,IAAI,MAAM,UAAU,KAAK,UAAU,SAAS,IAAI,CAAC,EAAE;AAC/D,YAAM,oBAAoB;AAAA,IAC9B;AAAA,EACJ,SAAS,OAAY;AACjB,oCAAY,6BAA6B,OAAO,MAAM,KAAK;AAAA,EAC/D;AACJ;",
  "names": ["axios"]
}
