{
  "version": 3,
  "sources": ["../../src/lib/endPoints.ts"],
  "sourcesContent": ["import { initStore } from \"./store\";\n\nexport function setupEndpoints(): void {\n\tconst store = initStore();\n\tconst apiLevel = store.apiLevel;\n\tif (apiLevel == 1) {\n\t\tstore.cloudURL = \"https://cloud.linked-go.com/cloudservice/api\";\n\t\treturn;\n\t}\n\tif (apiLevel == 2) {\n\t\tstore.cloudURL = \"https://cloud.linked-go.com/cloudservice/api\";\n\t\treturn;\n\t}\n\tif (apiLevel == 3) {\n\t\tstore.cloudURL = \"https://cloud.linked-go.com:449/crmservice/api\";\n\t}\n}\nexport const getSUrl = (): {\n\tsURL: string;\n} => {\n\tconst store = initStore();\n\tconst cloudURL = store.cloudURL;\n\tif (store.apiLevel < 3) {\n\t\treturn { sURL: cloudURL + \"/app/device/control.json\" };\n\t}\n\treturn { sURL: cloudURL + \"/app/device/control\" };\n};\n\nexport const getSUrlUpdateDeviceId = (): { sURL: string } => {\n\tconst store = initStore();\n\tif (store.apiLevel < 3) {\n\t\treturn { sURL: store.cloudURL + \"/app/device/getDataByCode.json\" };\n\t}\n\treturn { sURL: store.cloudURL + \"/app/device/getDataByCode\" };\n};\n\n// const httpsAgent = new https.Agent({\n// \trejectUnauthorized: false, // Achtung: Dies birgt Sicherheitsrisiken\n// });\nexport const getOptionsAndSUrl = (): {\n\tsUrl: string;\n\t// httpsAgent?: https.Agent;\n\t// timeout?: number;\n\toptions: {\n\t\tuserName?: string;\n\t\tuser_name?: string;\n\t\tpassword: string;\n\t\ttype: string;\n\t};\n} => {\n\tconst store = initStore();\n\tconst cloudURL = store.cloudURL;\n\tconst apiLevel = store.apiLevel;\n\tconst encryptedPassword = store.encryptedPassword;\n\tconst username = store.username;\n\tif (apiLevel < 3) {\n\t\treturn {\n\t\t\tsUrl: cloudURL + \"/app/user/login.json\",\n\t\t\toptions: {\n\t\t\t\tuser_name: username,\n\t\t\t\tpassword: encryptedPassword,\n\t\t\t\ttype: \"2\",\n\t\t\t},\n\t\t\t// httpsAgent,\n\t\t\t// timeout: 5000,\n\t\t};\n\t}\n\treturn {\n\t\tsUrl: cloudURL + \"/app/user/login\",\n\t\toptions: {\n\t\t\tuserName: username,\n\t\t\tpassword: encryptedPassword,\n\t\t\ttype: \"2\",\n\t\t},\n\t};\n};\n\nexport const getUpdateDeviceStatusSUrl = (): { sURL: string } => {\n\tconst store = initStore();\n\tif (store.apiLevel < 3) {\n\t\treturn { sURL: store.cloudURL + \"/app/device/getDeviceStatus.json\" };\n\t}\n\treturn { sURL: store.cloudURL + \"/app/device/getDeviceStatus\" };\n};\n\nexport const getUpdateDeviceIdSUrl = (): { sURL: string } => {\n\tconst store = initStore();\n\tif (store.apiLevel < 3) {\n\t\treturn { sURL: store.cloudURL + \"/app/device/deviceList.json\" };\n\t}\n\treturn { sURL: store.cloudURL + \"/app/device/deviceList\" };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA0B;AAEnB,SAAS,iBAAuB;AACtC,QAAM,YAAQ,wBAAU;AACxB,QAAM,WAAW,MAAM;AACvB,MAAI,YAAY,GAAG;AAClB,UAAM,WAAW;AACjB;AAAA,EACD;AACA,MAAI,YAAY,GAAG;AAClB,UAAM,WAAW;AACjB;AAAA,EACD;AACA,MAAI,YAAY,GAAG;AAClB,UAAM,WAAW;AAAA,EAClB;AACD;AACO,MAAM,UAAU,MAElB;AACJ,QAAM,YAAQ,wBAAU;AACxB,QAAM,WAAW,MAAM;AACvB,MAAI,MAAM,WAAW,GAAG;AACvB,WAAO,EAAE,MAAM,WAAW,2BAA2B;AAAA,EACtD;AACA,SAAO,EAAE,MAAM,WAAW,sBAAsB;AACjD;AAEO,MAAM,wBAAwB,MAAwB;AAC5D,QAAM,YAAQ,wBAAU;AACxB,MAAI,MAAM,WAAW,GAAG;AACvB,WAAO,EAAE,MAAM,MAAM,WAAW,iCAAiC;AAAA,EAClE;AACA,SAAO,EAAE,MAAM,MAAM,WAAW,4BAA4B;AAC7D;AAKO,MAAM,oBAAoB,MAU5B;AACJ,QAAM,YAAQ,wBAAU;AACxB,QAAM,WAAW,MAAM;AACvB,QAAM,WAAW,MAAM;AACvB,QAAM,oBAAoB,MAAM;AAChC,QAAM,WAAW,MAAM;AACvB,MAAI,WAAW,GAAG;AACjB,WAAO;AAAA,MACN,MAAM,WAAW;AAAA,MACjB,SAAS;AAAA,QACR,WAAW;AAAA,QACX,UAAU;AAAA,QACV,MAAM;AAAA,MACP;AAAA;AAAA;AAAA,IAGD;AAAA,EACD;AACA,SAAO;AAAA,IACN,MAAM,WAAW;AAAA,IACjB,SAAS;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,IACP;AAAA,EACD;AACD;AAEO,MAAM,4BAA4B,MAAwB;AAChE,QAAM,YAAQ,wBAAU;AACxB,MAAI,MAAM,WAAW,GAAG;AACvB,WAAO,EAAE,MAAM,MAAM,WAAW,mCAAmC;AAAA,EACpE;AACA,SAAO,EAAE,MAAM,MAAM,WAAW,8BAA8B;AAC/D;AAEO,MAAM,wBAAwB,MAAwB;AAC5D,QAAM,YAAQ,wBAAU;AACxB,MAAI,MAAM,WAAW,GAAG;AACvB,WAAO,EAAE,MAAM,MAAM,WAAW,8BAA8B;AAAA,EAC/D;AACA,SAAO,EAAE,MAAM,MAAM,WAAW,yBAAyB;AAC1D;",
  "names": []
}
