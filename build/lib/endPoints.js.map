{
  "version": 3,
  "sources": ["../../src/lib/endPoints.ts"],
  "sourcesContent": ["import { initStore } from './store';\n\nexport function setupEndpoints(): void {\n    const store = initStore();\n    const apiLevel = store.apiLevel;\n\n    store.cloudURL =\n        apiLevel == 3\n            ? 'https://cloud.linked-go.com:449/crmservice/api'\n            : 'https://cloud.linked-go.com/cloudservice/api';\n}\n\nexport const getSUrl = (): {\n    sURL: string;\n} => {\n    const store = initStore();\n    const cloudURL = store.cloudURL;\n    return store.apiLevel < 3\n        ? { sURL: `${cloudURL}/app/device/control.json` }\n        : { sURL: `${cloudURL}/app/device/control` };\n};\n\nexport const getSUrlUpdateDeviceId = (): { sURL: string } => {\n    const store = initStore();\n    return store.apiLevel < 3\n        ? { sURL: `${store.cloudURL}/app/device/getDataByCode.json` }\n        : { sURL: `${store.cloudURL}/app/device/getDataByCode` };\n};\n\nexport const getOptionsAndSUrl = (): {\n    sUrl: string;\n    options: {\n        userName?: string;\n        user_name?: string;\n        password: string;\n        type: string;\n    };\n} => {\n    const store = initStore();\n    const cloudURL = store.cloudURL;\n    const apiLevel = store.apiLevel;\n    const encryptedPassword = store.encryptedPassword;\n    const username = store.username;\n    return apiLevel < 3\n        ? {\n              sUrl: `${cloudURL}/app/user/login.json`,\n              options: {\n                  user_name: username,\n                  password: encryptedPassword,\n                  type: '2',\n              },\n          }\n        : {\n              sUrl: `${cloudURL}/app/user/login`,\n              options: {\n                  userName: username,\n                  password: encryptedPassword,\n                  type: '2',\n              },\n          };\n};\n\nexport const getUpdateDeviceStatusSUrl = (): { sURL: string } => {\n    const store = initStore();\n    return store.apiLevel < 3\n        ? { sURL: `${store.cloudURL}/app/device/getDeviceStatus.json` }\n        : { sURL: `${store.cloudURL}/app/device/getDeviceStatus` };\n};\n\nexport const getUpdateDeviceIdSUrl = (): { sURL: string } => {\n    const store = initStore();\n    return store.apiLevel < 3\n        ? { sURL: `${store.cloudURL}/app/device/deviceList.json` }\n        : { sURL: `${store.cloudURL}/app/device/deviceList` };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA0B;AAEnB,SAAS,iBAAuB;AACnC,QAAM,YAAQ,wBAAU;AACxB,QAAM,WAAW,MAAM;AAEvB,QAAM,WACF,YAAY,IACN,mDACA;AACd;AAEO,MAAM,UAAU,MAElB;AACD,QAAM,YAAQ,wBAAU;AACxB,QAAM,WAAW,MAAM;AACvB,SAAO,MAAM,WAAW,IAClB,EAAE,MAAM,GAAG,QAAQ,2BAA2B,IAC9C,EAAE,MAAM,GAAG,QAAQ,sBAAsB;AACnD;AAEO,MAAM,wBAAwB,MAAwB;AACzD,QAAM,YAAQ,wBAAU;AACxB,SAAO,MAAM,WAAW,IAClB,EAAE,MAAM,GAAG,MAAM,QAAQ,iCAAiC,IAC1D,EAAE,MAAM,GAAG,MAAM,QAAQ,4BAA4B;AAC/D;AAEO,MAAM,oBAAoB,MAQ5B;AACD,QAAM,YAAQ,wBAAU;AACxB,QAAM,WAAW,MAAM;AACvB,QAAM,WAAW,MAAM;AACvB,QAAM,oBAAoB,MAAM;AAChC,QAAM,WAAW,MAAM;AACvB,SAAO,WAAW,IACZ;AAAA,IACI,MAAM,GAAG,QAAQ;AAAA,IACjB,SAAS;AAAA,MACL,WAAW;AAAA,MACX,UAAU;AAAA,MACV,MAAM;AAAA,IACV;AAAA,EACJ,IACA;AAAA,IACI,MAAM,GAAG,QAAQ;AAAA,IACjB,SAAS;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,IACV;AAAA,EACJ;AACV;AAEO,MAAM,4BAA4B,MAAwB;AAC7D,QAAM,YAAQ,wBAAU;AACxB,SAAO,MAAM,WAAW,IAClB,EAAE,MAAM,GAAG,MAAM,QAAQ,mCAAmC,IAC5D,EAAE,MAAM,GAAG,MAAM,QAAQ,8BAA8B;AACjE;AAEO,MAAM,wBAAwB,MAAwB;AACzD,QAAM,YAAQ,wBAAU;AACxB,SAAO,MAAM,WAAW,IAClB,EAAE,MAAM,GAAG,MAAM,QAAQ,8BAA8B,IACvD,EAAE,MAAM,GAAG,MAAM,QAAQ,yBAAyB;AAC5D;",
  "names": []
}
