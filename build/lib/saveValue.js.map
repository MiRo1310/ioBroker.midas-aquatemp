{
  "version": 3,
  "sources": ["../../src/lib/saveValue.ts"],
  "sourcesContent": ["import type { MidasAquatemp } from '../main';\nimport { initStore } from './store';\nimport { errorLogger } from './logging';\n\nexport const saveValue = async (\n    key: string,\n    value: ioBroker.StateValue,\n    stateType: ioBroker.CommonType,\n    adapter: MidasAquatemp,\n): Promise<void> => {\n    const store = initStore();\n    const dpRoot = store.getDpRoot();\n    try {\n        const dp = `${dpRoot}.${key}`;\n\n        if (!(await adapter.objectExists(dp))) {\n            await adapter.setObjectNotExists(dp, {\n                type: 'state',\n                common: {\n                    name: key,\n                    type: stateType,\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            });\n        }\n        if (value) {\n            await adapter.setState(dp, value, true);\n        }\n    } catch (err: any) {\n        errorLogger('Error in saveValue', err, adapter);\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAA0B;AAC1B,qBAA4B;AAErB,MAAM,YAAY,OACrB,KACA,OACA,WACA,YACgB;AAChB,QAAM,YAAQ,wBAAU;AACxB,QAAM,SAAS,MAAM,UAAU;AAC/B,MAAI;AACA,UAAM,KAAK,GAAG,MAAM,IAAI,GAAG;AAE3B,QAAI,CAAE,MAAM,QAAQ,aAAa,EAAE,GAAI;AACnC,YAAM,QAAQ,mBAAmB,IAAI;AAAA,QACjC,MAAM;AAAA,QACN,QAAQ;AAAA,UACJ,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,OAAO;AAAA,QACX;AAAA,QACA,QAAQ,CAAC;AAAA,MACb,CAAC;AAAA,IACL;AACA,QAAI,OAAO;AACP,YAAM,QAAQ,SAAS,IAAI,OAAO,IAAI;AAAA,IAC1C;AAAA,EACJ,SAAS,KAAU;AACf,oCAAY,sBAAsB,KAAK,OAAO;AAAA,EAClD;AACJ;",
  "names": []
}
