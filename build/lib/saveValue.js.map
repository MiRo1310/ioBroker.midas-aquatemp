{
  "version": 3,
  "sources": ["../../src/lib/saveValue.ts"],
  "sourcesContent": ["import { MidasAquatemp } from '../main';\r\nimport { initStore } from './store';\r\nimport { errorLogger } from './logging';\r\n\r\nlet _this: MidasAquatemp;\r\n\r\nexport const saveValue = async (\r\n    key: string,\r\n    value: ioBroker.StateValue,\r\n    stateType: ioBroker.CommonType,\r\n): Promise<void> => {\r\n    const store = initStore();\r\n    const dpRoot = store.getDpRoot();\r\n    try {\r\n        if (!_this) {\r\n            _this = MidasAquatemp.getInstance();\r\n        }\r\n        const dp = `${dpRoot}.${key}`;\r\n\r\n        if (!(await _this.objectExists(dp))) {\r\n            await _this.setObjectNotExists(dp, {\r\n                type: 'state',\r\n                common: {\r\n                    name: key,\r\n                    type: stateType,\r\n                    role: 'value',\r\n                    read: true,\r\n                    write: false,\r\n                },\r\n                native: {},\r\n            });\r\n        }\r\n\r\n        await _this.setState(dp, value, true);\r\n    } catch (err: any) {\r\n        errorLogger('Error in saveValue', err, _this);\r\n    }\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8B;AAC9B,mBAA0B;AAC1B,qBAA4B;AAE5B,IAAI;AAEG,MAAM,YAAY,OACrB,KACA,OACA,cACgB;AAChB,QAAM,YAAQ,wBAAU;AACxB,QAAM,SAAS,MAAM,UAAU;AAC/B,MAAI;AACA,QAAI,CAAC,OAAO;AACR,cAAQ,0BAAc,YAAY;AAAA,IACtC;AACA,UAAM,KAAK,GAAG,MAAM,IAAI,GAAG;AAE3B,QAAI,CAAE,MAAM,MAAM,aAAa,EAAE,GAAI;AACjC,YAAM,MAAM,mBAAmB,IAAI;AAAA,QAC/B,MAAM;AAAA,QACN,QAAQ;AAAA,UACJ,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,OAAO;AAAA,QACX;AAAA,QACA,QAAQ,CAAC;AAAA,MACb,CAAC;AAAA,IACL;AAEA,UAAM,MAAM,SAAS,IAAI,OAAO,IAAI;AAAA,EACxC,SAAS,KAAU;AACf,oCAAY,sBAAsB,KAAK,KAAK;AAAA,EAChD;AACJ;",
  "names": []
}
