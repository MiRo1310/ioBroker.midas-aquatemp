{
  "version": 3,
  "sources": ["../../src/lib/saveValue.ts"],
  "sourcesContent": ["import { MidasAquatemp } from '../main';\nimport { initStore } from './store';\n\nlet _this: MidasAquatemp;\n\nexport const saveValue = async (\n    key: string,\n    value: ioBroker.StateValue,\n    stateType: ioBroker.CommonType,\n): Promise<void> => {\n    const store = initStore();\n    const dpRoot = store.getDpRoot();\n    try {\n        if (!_this) {\n            _this = MidasAquatemp.getInstance();\n        }\n        const dp = `${dpRoot}.${key}`;\n\n        if (!(await _this.objectExists(dp))) {\n            await _this.setObjectNotExists(dp, {\n                type: 'state',\n                common: {\n                    name: key,\n                    type: stateType,\n                    role: 'value',\n                    read: true,\n                    write: false,\n                },\n                native: {},\n            });\n        }\n\n        await _this.setState(dp, value, true);\n    } catch (err: any) {\n        _this.log.error(`Error in saveValue: ${err}`);\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8B;AAC9B,mBAA0B;AAE1B,IAAI;AAEG,MAAM,YAAY,OACrB,KACA,OACA,cACgB;AAChB,QAAM,YAAQ,wBAAU;AACxB,QAAM,SAAS,MAAM,UAAU;AAC/B,MAAI;AACA,QAAI,CAAC,OAAO;AACR,cAAQ,0BAAc,YAAY;AAAA,IACtC;AACA,UAAM,KAAK,GAAG,MAAM,IAAI,GAAG;AAE3B,QAAI,CAAE,MAAM,MAAM,aAAa,EAAE,GAAI;AACjC,YAAM,MAAM,mBAAmB,IAAI;AAAA,QAC/B,MAAM;AAAA,QACN,QAAQ;AAAA,UACJ,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,OAAO;AAAA,QACX;AAAA,QACA,QAAQ,CAAC;AAAA,MACb,CAAC;AAAA,IACL;AAEA,UAAM,MAAM,SAAS,IAAI,OAAO,IAAI;AAAA,EACxC,SAAS,KAAU;AACf,UAAM,IAAI,MAAM,uBAAuB,GAAG,EAAE;AAAA,EAChD;AACJ;",
  "names": []
}
