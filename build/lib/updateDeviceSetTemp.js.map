{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceSetTemp.ts"],
  "sourcesContent": ["import { getAxiosUpdateDeviceSetTempParams, getHeaders } from './axiosParameter';\r\nimport { getSUrl } from './endPoints';\r\nimport { saveValue } from './saveValue';\r\nimport { initStore } from './store';\r\nimport { errorLogger } from './logging';\r\nimport type { MidasAquatemp } from '../main';\r\nimport { request } from './axios';\r\nimport type { MidasData } from '../types/types';\r\nimport { isToken } from './utils';\r\n\r\nexport const updateDeviceSetTemp = async (\r\n    adapter: MidasAquatemp,\r\n    deviceCode: string,\r\n    temperature: number,\r\n): Promise<void> => {\r\n    const store = initStore();\r\n    const dpRoot = store.getDpRoot();\r\n    try {\r\n        const token = store.token;\r\n        const sTemperature = temperature.toString().replace(',', '.');\r\n        const result = await adapter.getStateAsync(`${dpRoot}.mode`);\r\n        if (!(result?.val || result?.val === 0)) {\r\n            return;\r\n        }\r\n\r\n        if (isToken(token)) {\r\n            const { sURL } = getSUrl();\r\n\r\n            const { data, error } = await request<MidasData>(\r\n                adapter,\r\n                sURL,\r\n                getAxiosUpdateDeviceSetTempParams({ deviceCode, sTemperature }),\r\n                getHeaders(token),\r\n            );\r\n            adapter.log.debug(`DeviceStatus: ${JSON.stringify(data)}`);\r\n\r\n            if (error) {\r\n                store.resetOnErrorHandler();\r\n                return;\r\n            }\r\n\r\n            await saveValue({ key: 'tempSet', value: temperature, stateType: 'number', adapter: adapter });\r\n        }\r\n    } catch (error: any) {\r\n        errorLogger('Error in updateDeviceSetTemp', error, adapter);\r\n    }\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA8D;AAC9D,uBAAwB;AACxB,uBAA0B;AAC1B,mBAA0B;AAC1B,qBAA4B;AAE5B,mBAAwB;AAExB,mBAAwB;AAEjB,MAAM,sBAAsB,OAC/B,SACA,YACA,gBACgB;AAChB,QAAM,YAAQ,wBAAU;AACxB,QAAM,SAAS,MAAM,UAAU;AAC/B,MAAI;AACA,UAAM,QAAQ,MAAM;AACpB,UAAM,eAAe,YAAY,SAAS,EAAE,QAAQ,KAAK,GAAG;AAC5D,UAAM,SAAS,MAAM,QAAQ,cAAc,GAAG,MAAM,OAAO;AAC3D,QAAI,GAAE,iCAAQ,SAAO,iCAAQ,SAAQ,IAAI;AACrC;AAAA,IACJ;AAEA,YAAI,sBAAQ,KAAK,GAAG;AAChB,YAAM,EAAE,KAAK,QAAI,0BAAQ;AAEzB,YAAM,EAAE,MAAM,MAAM,IAAI,UAAM;AAAA,QAC1B;AAAA,QACA;AAAA,YACA,yDAAkC,EAAE,YAAY,aAAa,CAAC;AAAA,YAC9D,kCAAW,KAAK;AAAA,MACpB;AACA,cAAQ,IAAI,MAAM,iBAAiB,KAAK,UAAU,IAAI,CAAC,EAAE;AAEzD,UAAI,OAAO;AACP,cAAM,oBAAoB;AAC1B;AAAA,MACJ;AAEA,gBAAM,4BAAU,EAAE,KAAK,WAAW,OAAO,aAAa,WAAW,UAAU,QAAiB,CAAC;AAAA,IACjG;AAAA,EACJ,SAAS,OAAY;AACjB,oCAAY,gCAAgC,OAAO,OAAO;AAAA,EAC9D;AACJ;",
  "names": []
}
