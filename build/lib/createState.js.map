{
  "version": 3,
  "sources": ["../../src/lib/createState.ts"],
  "sourcesContent": ["import { CreateObjects } from \"../types\";\r\nimport { useStore } from \"./store\";\r\nconst store = useStore();\r\n\r\nexport const createObjects = () => {\r\n    const _this = store._this;\r\n    const dpRoot = store.getDpRoot();\r\n\r\n    const objects: CreateObjects[] = [\r\n        { id: dpRoot + '.ambient', name: \"Umgebungstemperatur\", type: \"number\", role: \"value.temperature\", unit: \"\u00B0C\" },\r\n        { id: dpRoot + '.info.connection', name: \"Verbindung\", type: \"boolean\", role: \"state\", def: false },\r\n        { id: dpRoot + '.consumption', name: \"Stromverbrauch\", type: \"number\", role: \"value.power\", unit: \"W\", def: 0 },\r\n        { id: dpRoot + '.error', name: \"Fehler\", type: \"boolean\", role: \"state\", def: false },\r\n        { id: dpRoot + '.errorCode', name: \"Fehlercode\", type: \"string\", def: \"\", role: \"state\" },\r\n        { id: dpRoot + '.errorLevel', name: \"Fehlerlevel\", type: \"number\", role: \"state\" },\r\n        { id: dpRoot + '.errorMessage', name: \"Fehlermeldung\", type: \"string\", def: \"\", role: \"state\" },\r\n        { id: dpRoot + '.mode', name: \"Modus\", type: \"string\", states: \"-1:off;0:cool;1:heat;2:auto\", def: \"\", write: true, role: \"state\" },\r\n        { id: dpRoot + '.rotor', name: \"L\u00FCfterdrehzahl\", type: \"number\", unit: \"rpm\", def: 0, role: \"state\" },\r\n        { id: dpRoot + '.silent', name: \"Silent\", type: \"boolean\", role: \"state\", def: false, write: true },\r\n        { id: dpRoot + '.state', name: \"Status\", type: \"boolean\", role: \"state\", def: false },\r\n        { id: dpRoot + '.tempIn', name: \"Eingangstemperatur\", type: \"number\", unit: \"\u00B0C\", role: \"value.temperature\", },\r\n        { id: dpRoot + '.tempOut', name: \"Ausgangstemperatur\", type: \"number\", unit: \"\u00B0C\", role: \"value.temperature\", },\r\n        { id: dpRoot + '.tempSet', name: \"Solltemperatur\", type: \"number\", unit: \"\u00B0C\", write: true, role: \"value.temperature\", },\r\n        { id: dpRoot + '.suctionTemp', name: \"Luftansaugtemperatur\", type: \"number\", unit: \"\u00B0C\", role: \"value.temperature\", },\r\n        { id: dpRoot + '.coilTemp', name: \"Kompressortemperatur\", type: \"number\", unit: \"\u00B0C\", role: \"value.temperature\", },\r\n        { id: dpRoot + '.exhaust', name: \"Kompressorausgang\", type: \"number\", unit: \"\u00B0C\", role: \"value.temperature\", },\r\n        { id: dpRoot + '.ProductCode', name: \"Produktcode\", type: \"string\", role: \"state\" },\r\n        { id: dpRoot + '.DeviceCode', name: \"Ger\u00E4te-ID\", type: \"string\", role: \"state\" },\r\n        { id: dpRoot + '.rawJSON', name: \"komplette R\u00FCckgabe\", type: \"array\", role: \"state\" }];\r\n\r\n\r\n    objects.forEach(({ id, name, role, unit, type, def }) => {\r\n        _this.setObjectNotExists(id, { type: \"state\", common: { read: true, write: false, type: type, unit, role, name, def }, native: {} });\r\n    })\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAAyB;AACzB,MAAM,YAAQ,uBAAS;AAEhB,MAAM,gBAAgB,MAAM;AAC/B,QAAM,QAAQ,MAAM;AACpB,QAAM,SAAS,MAAM,UAAU;AAE/B,QAAM,UAA2B;AAAA,IAC7B,EAAE,IAAI,SAAS,YAAY,MAAM,uBAAuB,MAAM,UAAU,MAAM,qBAAqB,MAAM,QAAK;AAAA,IAC9G,EAAE,IAAI,SAAS,oBAAoB,MAAM,cAAc,MAAM,WAAW,MAAM,SAAS,KAAK,MAAM;AAAA,IAClG,EAAE,IAAI,SAAS,gBAAgB,MAAM,kBAAkB,MAAM,UAAU,MAAM,eAAe,MAAM,KAAK,KAAK,EAAE;AAAA,IAC9G,EAAE,IAAI,SAAS,UAAU,MAAM,UAAU,MAAM,WAAW,MAAM,SAAS,KAAK,MAAM;AAAA,IACpF,EAAE,IAAI,SAAS,cAAc,MAAM,cAAc,MAAM,UAAU,KAAK,IAAI,MAAM,QAAQ;AAAA,IACxF,EAAE,IAAI,SAAS,eAAe,MAAM,eAAe,MAAM,UAAU,MAAM,QAAQ;AAAA,IACjF,EAAE,IAAI,SAAS,iBAAiB,MAAM,iBAAiB,MAAM,UAAU,KAAK,IAAI,MAAM,QAAQ;AAAA,IAC9F,EAAE,IAAI,SAAS,SAAS,MAAM,SAAS,MAAM,UAAU,QAAQ,+BAA+B,KAAK,IAAI,OAAO,MAAM,MAAM,QAAQ;AAAA,IAClI,EAAE,IAAI,SAAS,UAAU,MAAM,qBAAkB,MAAM,UAAU,MAAM,OAAO,KAAK,GAAG,MAAM,QAAQ;AAAA,IACpG,EAAE,IAAI,SAAS,WAAW,MAAM,UAAU,MAAM,WAAW,MAAM,SAAS,KAAK,OAAO,OAAO,KAAK;AAAA,IAClG,EAAE,IAAI,SAAS,UAAU,MAAM,UAAU,MAAM,WAAW,MAAM,SAAS,KAAK,MAAM;AAAA,IACpF,EAAE,IAAI,SAAS,WAAW,MAAM,sBAAsB,MAAM,UAAU,MAAM,SAAM,MAAM,oBAAqB;AAAA,IAC7G,EAAE,IAAI,SAAS,YAAY,MAAM,sBAAsB,MAAM,UAAU,MAAM,SAAM,MAAM,oBAAqB;AAAA,IAC9G,EAAE,IAAI,SAAS,YAAY,MAAM,kBAAkB,MAAM,UAAU,MAAM,SAAM,OAAO,MAAM,MAAM,oBAAqB;AAAA,IACvH,EAAE,IAAI,SAAS,gBAAgB,MAAM,wBAAwB,MAAM,UAAU,MAAM,SAAM,MAAM,oBAAqB;AAAA,IACpH,EAAE,IAAI,SAAS,aAAa,MAAM,wBAAwB,MAAM,UAAU,MAAM,SAAM,MAAM,oBAAqB;AAAA,IACjH,EAAE,IAAI,SAAS,YAAY,MAAM,qBAAqB,MAAM,UAAU,MAAM,SAAM,MAAM,oBAAqB;AAAA,IAC7G,EAAE,IAAI,SAAS,gBAAgB,MAAM,eAAe,MAAM,UAAU,MAAM,QAAQ;AAAA,IAClF,EAAE,IAAI,SAAS,eAAe,MAAM,gBAAa,MAAM,UAAU,MAAM,QAAQ;AAAA,IAC/E,EAAE,IAAI,SAAS,YAAY,MAAM,yBAAsB,MAAM,SAAS,MAAM,QAAQ;AAAA,EAAC;AAGzF,UAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,MAAM,MAAM,MAAM,IAAI,MAAM;AACrD,UAAM,mBAAmB,IAAI,EAAE,MAAM,SAAS,QAAQ,EAAE,MAAM,MAAM,OAAO,OAAO,MAAY,MAAM,MAAM,MAAM,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC;AAAA,EACvI,CAAC;AACL;",
  "names": []
}
