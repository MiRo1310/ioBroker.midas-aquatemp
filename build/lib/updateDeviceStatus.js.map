{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceStatus.ts"],
  "sourcesContent": ["import axios from \"axios\";\nimport { saveValue } from \"./saveValue\";\nimport { initStore } from \"./store\";\nimport { updateDeviceDetails } from \"./updateDeviceDetails\";\nimport { updateDeviceErrorMsg } from \"./updateDeviceOnError\";\n\nexport async function updateDeviceStatus(): Promise<void> {\n\tconst store = initStore();\n\tconst { apiLevel, token, device: deviceCode, cloudURL } = store;\n\tif (token) {\n\t\tlet sURL = \"\";\n\n\t\tif (apiLevel < 3) {\n\t\t\tsURL = cloudURL + \"/app/device/getDeviceStatus.json\";\n\t\t} else {\n\t\t\tsURL = cloudURL + \"/app/device/getDeviceStatus\";\n\t\t}\n\n\t\tconst response = await axios.post(\n\t\t\tsURL,\n\t\t\t{\n\t\t\t\tdevice_code: deviceCode,\n\t\t\t\tdeviceCode: deviceCode,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: { \"x-token\": token },\n\t\t\t},\n\t\t);\n\n\t\tif (parseInt(response.data.error_code) == 0) {\n\t\t\tif (apiLevel < 3) {\n\t\t\t\tif (response.data.object_result[\"is_fault\"] == true) {\n\t\t\t\t\t// TODO: Fehlerbeschreibung abrufen\n\t\t\t\t\t//clearValues();\n\t\t\t\t\tsaveValue(\"error\", true, \"boolean\");\n\t\t\t\t\tupdateDeviceDetails();\n\n\t\t\t\t\tupdateDeviceErrorMsg();\n\t\t\t\t} else {\n\t\t\t\t\t// kein Fehler\n\t\t\t\t\tsaveValue(\"error\", false, \"boolean\");\n\t\t\t\t\tsaveValue(\"errorMessage\", \"\", \"string\");\n\t\t\t\t\tsaveValue(\"errorCode\", \"\", \"string\");\n\t\t\t\t\tsaveValue(\"errorLevel\", 0, \"number\");\n\t\t\t\t\tupdateDeviceDetails();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (response.data.objectResult[\"is_fault\"] == true) {\n\t\t\t\t\t// TODO: Fehlerbeschreibung abrufen\n\t\t\t\t\t//clearValues();\n\t\t\t\t\tsaveValue(\"error\", true, \"boolean\");\n\t\t\t\t\tupdateDeviceDetails();\n\t\t\t\t\tupdateDeviceErrorMsg();\n\t\t\t\t} else {\n\t\t\t\t\t// kein Fehler\n\t\t\t\t\tsaveValue(\"error\", false, \"boolean\");\n\t\t\t\t\tsaveValue(\"errorMessage\", \"\", \"string\");\n\t\t\t\t\tsaveValue(\"errorCode\", \"\", \"string\");\n\t\t\t\t\tsaveValue(\"errorLevel\", 0, \"number\");\n\t\t\t\t\tupdateDeviceDetails();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// log(\"Fehler in updateDeviceStatus(): \" + JSON.stringify(response.data), \"error\");\n\n\t\t\tsaveValue(\"info.connection\", false, \"boolean\");\n\t\t}\n\t}\n\t(store.token = \"\"), (store.device = \"\"), (store.reachable = false);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,uBAA0B;AAC1B,mBAA0B;AAC1B,iCAAoC;AACpC,iCAAqC;AAErC,eAAsB,qBAAoC;AACzD,QAAM,YAAQ,wBAAU;AACxB,QAAM,EAAE,UAAU,OAAO,QAAQ,YAAY,SAAS,IAAI;AAC1D,MAAI,OAAO;AACV,QAAI,OAAO;AAEX,QAAI,WAAW,GAAG;AACjB,aAAO,WAAW;AAAA,IACnB,OAAO;AACN,aAAO,WAAW;AAAA,IACnB;AAEA,UAAM,WAAW,MAAM,aAAAA,QAAM;AAAA,MAC5B;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb;AAAA,MACD;AAAA,MACA;AAAA,QACC,SAAS,EAAE,WAAW,MAAM;AAAA,MAC7B;AAAA,IACD;AAEA,QAAI,SAAS,SAAS,KAAK,UAAU,KAAK,GAAG;AAC5C,UAAI,WAAW,GAAG;AACjB,YAAI,SAAS,KAAK,cAAc,UAAU,KAAK,MAAM;AAGpD,0CAAU,SAAS,MAAM,SAAS;AAClC,8DAAoB;AAEpB,+DAAqB;AAAA,QACtB,OAAO;AAEN,0CAAU,SAAS,OAAO,SAAS;AACnC,0CAAU,gBAAgB,IAAI,QAAQ;AACtC,0CAAU,aAAa,IAAI,QAAQ;AACnC,0CAAU,cAAc,GAAG,QAAQ;AACnC,8DAAoB;AAAA,QACrB;AAAA,MACD,OAAO;AACN,YAAI,SAAS,KAAK,aAAa,UAAU,KAAK,MAAM;AAGnD,0CAAU,SAAS,MAAM,SAAS;AAClC,8DAAoB;AACpB,+DAAqB;AAAA,QACtB,OAAO;AAEN,0CAAU,SAAS,OAAO,SAAS;AACnC,0CAAU,gBAAgB,IAAI,QAAQ;AACtC,0CAAU,aAAa,IAAI,QAAQ;AACnC,0CAAU,cAAc,GAAG,QAAQ;AACnC,8DAAoB;AAAA,QACrB;AAAA,MACD;AAAA,IACD,OAAO;AAGN,sCAAU,mBAAmB,OAAO,SAAS;AAAA,IAC9C;AAAA,EACD;AACA,EAAC,MAAM,QAAQ,IAAM,MAAM,SAAS,IAAM,MAAM,YAAY;AAC7D;",
  "names": ["axios"]
}
