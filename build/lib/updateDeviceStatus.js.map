{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceStatus.ts"],
  "sourcesContent": ["import axios from \"axios\";\nimport { getUpdateDeviceStatusSUrl } from \"./endPoints\";\nimport { saveValue } from \"./saveValue\";\nimport { initStore } from \"./store\";\nimport { updateDeviceDetails } from \"./updateDeviceDetails\";\nimport { updateDeviceErrorMsg } from \"./updateDeviceOnError\";\n\nexport async function updateDeviceStatus(): Promise<void> {\n\tconst store = initStore();\n\ttry {\n\t\tconst { token, device: deviceCode } = store;\n\t\tif (token) {\n\t\t\tconst { sURL } = getUpdateDeviceStatusSUrl();\n\n\t\t\tconst response = await axios.post(\n\t\t\t\tsURL,\n\t\t\t\t{\n\t\t\t\t\tdevice_code: deviceCode,\n\t\t\t\t\tdeviceCode: deviceCode,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: { \"x-token\": token },\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (parseInt(response.data.error_code) == 0) {\n\t\t\t\tif (response.data?.object_result?.[\"is_fault\"] || response.data?.objectResult?.[\"isFault\"]) {\n\t\t\t\t\tstore._this.log.error(\"Error in updateDeviceStatus(): \" + JSON.stringify(response.data));\n\t\t\t\t\t// TODO: Fehlerbeschreibung abrufen\n\t\t\t\t\t//clearValues();\n\t\t\t\t\tsaveValue(\"error\", true, \"boolean\");\n\t\t\t\t\tupdateDeviceDetails();\n\t\t\t\t\tupdateDeviceErrorMsg();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// kein Fehler\n\t\t\t\tsaveValue(\"error\", false, \"boolean\");\n\t\t\t\tsaveValue(\"errorMessage\", \"\", \"string\");\n\t\t\t\tsaveValue(\"errorCode\", \"\", \"string\");\n\t\t\t\tsaveValue(\"errorLevel\", 0, \"number\");\n\t\t\t\tupdateDeviceDetails();\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsaveValue(\"info.connection\", false, \"boolean\");\n\t\t\treturn;\n\t\t}\n\t\t(store.token = \"\"), (store.device = \"\"), (store.reachable = false);\n\t} catch (error: any) {\n\t\tstore._this.log.error(JSON.stringify(error));\n\t\tstore._this.log.error(JSON.stringify(error.stack));\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,uBAA0C;AAC1C,uBAA0B;AAC1B,mBAA0B;AAC1B,iCAAoC;AACpC,iCAAqC;AAErC,eAAsB,qBAAoC;AAP1D;AAQC,QAAM,YAAQ,wBAAU;AACxB,MAAI;AACH,UAAM,EAAE,OAAO,QAAQ,WAAW,IAAI;AACtC,QAAI,OAAO;AACV,YAAM,EAAE,KAAK,QAAI,4CAA0B;AAE3C,YAAM,WAAW,MAAM,aAAAA,QAAM;AAAA,QAC5B;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb;AAAA,QACD;AAAA,QACA;AAAA,UACC,SAAS,EAAE,WAAW,MAAM;AAAA,QAC7B;AAAA,MACD;AAEA,UAAI,SAAS,SAAS,KAAK,UAAU,KAAK,GAAG;AAC5C,cAAI,oBAAS,SAAT,mBAAe,kBAAf,mBAA+B,kBAAe,oBAAS,SAAT,mBAAe,iBAAf,mBAA8B,aAAY;AAC3F,gBAAM,MAAM,IAAI,MAAM,oCAAoC,KAAK,UAAU,SAAS,IAAI,CAAC;AAGvF,0CAAU,SAAS,MAAM,SAAS;AAClC,8DAAoB;AACpB,+DAAqB;AACrB;AAAA,QACD;AAEA,wCAAU,SAAS,OAAO,SAAS;AACnC,wCAAU,gBAAgB,IAAI,QAAQ;AACtC,wCAAU,aAAa,IAAI,QAAQ;AACnC,wCAAU,cAAc,GAAG,QAAQ;AACnC,4DAAoB;AAEpB;AAAA,MACD;AACA,sCAAU,mBAAmB,OAAO,SAAS;AAC7C;AAAA,IACD;AACA,IAAC,MAAM,QAAQ,IAAM,MAAM,SAAS,IAAM,MAAM,YAAY;AAAA,EAC7D,SAAS,OAAY;AACpB,UAAM,MAAM,IAAI,MAAM,KAAK,UAAU,KAAK,CAAC;AAC3C,UAAM,MAAM,IAAI,MAAM,KAAK,UAAU,MAAM,KAAK,CAAC;AAAA,EAClD;AACD;",
  "names": ["axios"]
}
