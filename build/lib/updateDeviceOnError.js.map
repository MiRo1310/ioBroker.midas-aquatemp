{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceOnError.ts"],
  "sourcesContent": ["import { saveValue } from './saveValue';\nimport { initStore } from './store';\nimport { errorLogger } from './logging';\nimport type { MidasAquatemp } from '../main';\nimport { request } from './axios';\n\nexport async function updateDeviceErrorMsg(adapter: MidasAquatemp): Promise<void> {\n    const store = initStore();\n    try {\n        const { token, apiLevel, cloudURL, device: deviceCode } = store;\n        if (token) {\n            const sURL =\n                apiLevel < 3\n                    ? `${cloudURL}/app/device/getFaultDataByDeviceCode.json`\n                    : `${cloudURL}/app/device/getFaultDataByDeviceCode`;\n\n            const response = await request(\n                adapter,\n                sURL,\n                {\n                    device_code: deviceCode,\n                    deviceCode: deviceCode,\n                },\n                {\n                    headers: { 'x-token': token },\n                },\n            );\n            if (!response?.data) {\n                return;\n            }\n\n            if (parseInt(response.data.error_code) == 0) {\n                await saveValue({ key: 'error', value: true, stateType: 'boolean', adapter: adapter });\n\n                if (apiLevel < 3) {\n                    await saveValue({\n                        key: 'errorMessage',\n                        value: response.data.object_result[0]?.description ?? '',\n                        stateType: 'string',\n                        adapter: adapter,\n                    });\n                    await saveValue({\n                        key: 'errorCode',\n                        value: response.data.object_result[0]?.fault_code,\n                        stateType: 'string',\n                        adapter: adapter,\n                    });\n                    await saveValue({\n                        key: 'errorLevel',\n                        value: response.data.object_result[0]?.error_level,\n                        stateType: 'string',\n                        adapter: adapter,\n                    });\n                    return;\n                }\n                await saveValue({\n                    key: 'errorMessage',\n                    value: response.data.objectResult[0]?.description ?? '',\n                    stateType: 'string',\n                    adapter: adapter,\n                });\n                await saveValue({\n                    key: 'errorCode',\n                    value: response.data.objectResult[0]?.fault_code,\n                    stateType: 'string',\n                    adapter: adapter,\n                });\n                await saveValue({\n                    key: 'errorLevel',\n                    value: response.data.objectResult[0]?.error_level,\n                    stateType: 'string',\n                    adapter: adapter,\n                });\n                return;\n            }\n            // Login-Fehler\n            store.resetOnErrorHandler();\n            return;\n        }\n        return;\n    } catch (error: any) {\n        errorLogger('Error in updateDeviceErrorMsg', error, adapter);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA0B;AAC1B,mBAA0B;AAC1B,qBAA4B;AAE5B,mBAAwB;AAExB,eAAsB,qBAAqB,SAAuC;AANlF;AAOI,QAAM,YAAQ,wBAAU;AACxB,MAAI;AACA,UAAM,EAAE,OAAO,UAAU,UAAU,QAAQ,WAAW,IAAI;AAC1D,QAAI,OAAO;AACP,YAAM,OACF,WAAW,IACL,GAAG,QAAQ,8CACX,GAAG,QAAQ;AAErB,YAAM,WAAW,UAAM;AAAA,QACnB;AAAA,QACA;AAAA,QACA;AAAA,UACI,aAAa;AAAA,UACb;AAAA,QACJ;AAAA,QACA;AAAA,UACI,SAAS,EAAE,WAAW,MAAM;AAAA,QAChC;AAAA,MACJ;AACA,UAAI,EAAC,qCAAU,OAAM;AACjB;AAAA,MACJ;AAEA,UAAI,SAAS,SAAS,KAAK,UAAU,KAAK,GAAG;AACzC,kBAAM,4BAAU,EAAE,KAAK,SAAS,OAAO,MAAM,WAAW,WAAW,QAAiB,CAAC;AAErF,YAAI,WAAW,GAAG;AACd,oBAAM,4BAAU;AAAA,YACZ,KAAK;AAAA,YACL,QAAO,oBAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC,gBAAhC,YAA+C;AAAA,YACtD,WAAW;AAAA,YACX;AAAA,UACJ,CAAC;AACD,oBAAM,4BAAU;AAAA,YACZ,KAAK;AAAA,YACL,QAAO,cAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC;AAAA,YACvC,WAAW;AAAA,YACX;AAAA,UACJ,CAAC;AACD,oBAAM,4BAAU;AAAA,YACZ,KAAK;AAAA,YACL,QAAO,cAAS,KAAK,cAAc,CAAC,MAA7B,mBAAgC;AAAA,YACvC,WAAW;AAAA,YACX;AAAA,UACJ,CAAC;AACD;AAAA,QACJ;AACA,kBAAM,4BAAU;AAAA,UACZ,KAAK;AAAA,UACL,QAAO,oBAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B,gBAA/B,YAA8C;AAAA,UACrD,WAAW;AAAA,UACX;AAAA,QACJ,CAAC;AACD,kBAAM,4BAAU;AAAA,UACZ,KAAK;AAAA,UACL,QAAO,cAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B;AAAA,UACtC,WAAW;AAAA,UACX;AAAA,QACJ,CAAC;AACD,kBAAM,4BAAU;AAAA,UACZ,KAAK;AAAA,UACL,QAAO,cAAS,KAAK,aAAa,CAAC,MAA5B,mBAA+B;AAAA,UACtC,WAAW;AAAA,UACX;AAAA,QACJ,CAAC;AACD;AAAA,MACJ;AAEA,YAAM,oBAAoB;AAC1B;AAAA,IACJ;AACA;AAAA,EACJ,SAAS,OAAY;AACjB,oCAAY,iCAAiC,OAAO,OAAO;AAAA,EAC/D;AACJ;",
  "names": []
}
