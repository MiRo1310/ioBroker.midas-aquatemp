{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceOnError.ts"],
  "sourcesContent": ["import axios from \"axios\";\r\nimport { saveValue } from \"./saveValue\";\r\nimport { useStore } from \"./store\";\r\nconst store = useStore();\r\n\r\nexport function updateDeviceErrorMsg(): void {\r\n\r\n    const { token, apiLevel, cloudURL, device: deviceCode } = store;\r\n    if (token) {\r\n\r\n        var sURL = \"\";\r\n\r\n        if (apiLevel < 3) {\r\n            sURL = cloudURL + '/app/device/getFaultDataByDeviceCode.json';\r\n        } else {\r\n            sURL = cloudURL + '/app/device/getFaultDataByDeviceCode';\r\n        }\r\n\r\n        axios.post(sURL, {\r\n            \"device_code\": deviceCode,\r\n            \"deviceCode\": deviceCode\r\n        }, {\r\n            headers: { \"x-token\": token },\r\n        })\r\n            .then(function (response) {\r\n\r\n                if (parseInt(response.data.error_code) == 0) {\r\n\r\n                    saveValue(\"error\", true, \"boolean\");\r\n\r\n                    if (apiLevel < 3) {\r\n                        saveValue(\"errorMessage\", response.data.object_result[0].description, \"string\");\r\n                        saveValue(\"errorCode\", response.data.object_result[0].fault_code, \"string\");\r\n                        saveValue(\"errorLevel\", response.data.object_result[0].error_level, \"string\");\r\n                    } else {\r\n                        saveValue(\"errorMessage\", response.data.objectResult[0].description, \"string\");\r\n                        saveValue(\"errorCode\", response.data.objectResult[0].fault_code, \"string\");\r\n                        saveValue(\"errorLevel\", response.data.objectResult[0].error_level, \"string\");\r\n                    }\r\n                    return\r\n                }\r\n                // Login-Fehler\r\n                store.token = \"\",\r\n                    store.device = \"\",\r\n                    store.reachable = false\r\n                saveValue(\"info.connection\", false, \"boolean\");\r\n                return;\r\n\r\n            })\r\n            .catch(function (error) {\r\n                // Login-Fehler\r\n                // log(\"Fehler in updateDeviceErrorMsg(): \" + error, \"error\");\r\n                store.token = \"\",\r\n                    store.device = \"\",\r\n                    store.reachable = false\r\n                saveValue(\"info.connection\", false, \"boolean\");\r\n                return;\r\n            });\r\n    }\r\n    return\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,uBAA0B;AAC1B,mBAAyB;AACzB,MAAM,YAAQ,uBAAS;AAEhB,SAAS,uBAA6B;AAEzC,QAAM,EAAE,OAAO,UAAU,UAAU,QAAQ,WAAW,IAAI;AAC1D,MAAI,OAAO;AAEP,QAAI,OAAO;AAEX,QAAI,WAAW,GAAG;AACd,aAAO,WAAW;AAAA,IACtB,OAAO;AACH,aAAO,WAAW;AAAA,IACtB;AAEA,iBAAAA,QAAM,KAAK,MAAM;AAAA,MACb,eAAe;AAAA,MACf,cAAc;AAAA,IAClB,GAAG;AAAA,MACC,SAAS,EAAE,WAAW,MAAM;AAAA,IAChC,CAAC,EACI,KAAK,SAAU,UAAU;AAEtB,UAAI,SAAS,SAAS,KAAK,UAAU,KAAK,GAAG;AAEzC,wCAAU,SAAS,MAAM,SAAS;AAElC,YAAI,WAAW,GAAG;AACd,0CAAU,gBAAgB,SAAS,KAAK,cAAc,CAAC,EAAE,aAAa,QAAQ;AAC9E,0CAAU,aAAa,SAAS,KAAK,cAAc,CAAC,EAAE,YAAY,QAAQ;AAC1E,0CAAU,cAAc,SAAS,KAAK,cAAc,CAAC,EAAE,aAAa,QAAQ;AAAA,QAChF,OAAO;AACH,0CAAU,gBAAgB,SAAS,KAAK,aAAa,CAAC,EAAE,aAAa,QAAQ;AAC7E,0CAAU,aAAa,SAAS,KAAK,aAAa,CAAC,EAAE,YAAY,QAAQ;AACzE,0CAAU,cAAc,SAAS,KAAK,aAAa,CAAC,EAAE,aAAa,QAAQ;AAAA,QAC/E;AACA;AAAA,MACJ;AAEA,YAAM,QAAQ,IACV,MAAM,SAAS,IACf,MAAM,YAAY;AACtB,sCAAU,mBAAmB,OAAO,SAAS;AAC7C;AAAA,IAEJ,CAAC,EACA,MAAM,SAAU,OAAO;AAGpB,YAAM,QAAQ,IACV,MAAM,SAAS,IACf,MAAM,YAAY;AACtB,sCAAU,mBAAmB,OAAO,SAAS;AAC7C;AAAA,IACJ,CAAC;AAAA,EACT;AACA;AACJ;",
  "names": ["axios"]
}
