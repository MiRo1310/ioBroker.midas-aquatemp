{
  "version": 3,
  "sources": ["../../src/lib/updateDeviceOnError.ts"],
  "sourcesContent": ["import axios from \"axios\";\nimport { saveValue } from \"./saveValue\";\nimport { initStore } from \"./store\";\n\nexport async function updateDeviceErrorMsg(): Promise<void> {\n\tconst store = initStore();\n\ttry {\n\t\tconst { token, apiLevel, cloudURL, device: deviceCode } = store;\n\t\tif (token) {\n\t\t\tlet sURL = \"\";\n\n\t\t\tif (apiLevel < 3) {\n\t\t\t\tsURL = cloudURL + \"/app/device/getFaultDataByDeviceCode.json\";\n\t\t\t} else {\n\t\t\t\tsURL = cloudURL + \"/app/device/getFaultDataByDeviceCode\";\n\t\t\t}\n\n\t\t\tconst response = await axios.post(\n\t\t\t\tsURL,\n\t\t\t\t{\n\t\t\t\t\tdevice_code: deviceCode,\n\t\t\t\t\tdeviceCode: deviceCode,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: { \"x-token\": token },\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (parseInt(response.data.error_code) == 0) {\n\t\t\t\tsaveValue(\"error\", true, \"boolean\");\n\n\t\t\t\tif (apiLevel < 3) {\n\t\t\t\t\tsaveValue(\"errorMessage\", response.data.object_result[0].description, \"string\");\n\t\t\t\t\tsaveValue(\"errorCode\", response.data.object_result[0].fault_code, \"string\");\n\t\t\t\t\tsaveValue(\"errorLevel\", response.data.object_result[0].error_level, \"string\");\n\t\t\t\t} else {\n\t\t\t\t\tsaveValue(\"errorMessage\", response.data.objectResult[0].description, \"string\");\n\t\t\t\t\tsaveValue(\"errorCode\", response.data.objectResult[0].fault_code, \"string\");\n\t\t\t\t\tsaveValue(\"errorLevel\", response.data.objectResult[0].error_level, \"string\");\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Login-Fehler\n\t\t\t(store.token = \"\"),\n\t\t\t\t// , (store.device = \"\")\n\t\t\t\t(store.reachable = false);\n\t\t\tsaveValue(\"info.connection\", false, \"boolean\");\n\t\t\treturn;\n\t\t}\n\t\treturn;\n\t} catch (error: any) {\n\t\tstore._this.log.error(JSON.stringify(error));\n\t\tstore._this.log.error(JSON.stringify(error.stack));\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,uBAA0B;AAC1B,mBAA0B;AAE1B,eAAsB,uBAAsC;AAC3D,QAAM,YAAQ,wBAAU;AACxB,MAAI;AACH,UAAM,EAAE,OAAO,UAAU,UAAU,QAAQ,WAAW,IAAI;AAC1D,QAAI,OAAO;AACV,UAAI,OAAO;AAEX,UAAI,WAAW,GAAG;AACjB,eAAO,WAAW;AAAA,MACnB,OAAO;AACN,eAAO,WAAW;AAAA,MACnB;AAEA,YAAM,WAAW,MAAM,aAAAA,QAAM;AAAA,QAC5B;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb;AAAA,QACD;AAAA,QACA;AAAA,UACC,SAAS,EAAE,WAAW,MAAM;AAAA,QAC7B;AAAA,MACD;AAEA,UAAI,SAAS,SAAS,KAAK,UAAU,KAAK,GAAG;AAC5C,wCAAU,SAAS,MAAM,SAAS;AAElC,YAAI,WAAW,GAAG;AACjB,0CAAU,gBAAgB,SAAS,KAAK,cAAc,CAAC,EAAE,aAAa,QAAQ;AAC9E,0CAAU,aAAa,SAAS,KAAK,cAAc,CAAC,EAAE,YAAY,QAAQ;AAC1E,0CAAU,cAAc,SAAS,KAAK,cAAc,CAAC,EAAE,aAAa,QAAQ;AAAA,QAC7E,OAAO;AACN,0CAAU,gBAAgB,SAAS,KAAK,aAAa,CAAC,EAAE,aAAa,QAAQ;AAC7E,0CAAU,aAAa,SAAS,KAAK,aAAa,CAAC,EAAE,YAAY,QAAQ;AACzE,0CAAU,cAAc,SAAS,KAAK,aAAa,CAAC,EAAE,aAAa,QAAQ;AAAA,QAC5E;AACA;AAAA,MACD;AAEA,MAAC,MAAM,QAAQ;AAAA,MAEb,MAAM,YAAY;AACpB,sCAAU,mBAAmB,OAAO,SAAS;AAC7C;AAAA,IACD;AACA;AAAA,EACD,SAAS,OAAY;AACpB,UAAM,MAAM,IAAI,MAAM,KAAK,UAAU,KAAK,CAAC;AAC3C,UAAM,MAAM,IAAI,MAAM,KAAK,UAAU,MAAM,KAAK,CAAC;AAAA,EAClD;AACD;",
  "names": ["axios"]
}
