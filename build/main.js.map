{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\r\n * Created with @iobroker/create-adapter v2.6.3\r\n */\r\n\r\n// The adapter-core module gives you access to the core ioBroker functions\r\n// you need to create an\r\nimport { initStore } from \"./lib/store\";\r\n\r\nimport * as utils from \"@iobroker/adapter-core\";\r\nimport { createObjects } from \"./lib/createState\";\r\nimport { encryptPassword } from \"./lib/encryptPassword\";\r\nimport { setupEndpoints } from \"./lib/endPoints\";\r\nimport { saveValue } from \"./lib/saveValue\";\r\n\r\nimport { updateToken } from \"./lib/token\";\r\n\r\nimport { updateDevicePower } from \"./lib/updateDevicePower\";\r\nimport { updateDeviceSetTemp } from \"./lib/updateDeviceSetTemp\";\r\nimport { updateDeviceSilent } from \"./lib/updateDeviceSilent\";\r\n\r\nlet updateIntervall: ioBroker.Interval | undefined;\r\nlet tokenRefreshTimer: ioBroker.Interval | undefined;\r\n\r\nexport class MidasAquatemp extends utils.Adapter {\r\n\tprivate static instance: MidasAquatemp;\r\n\r\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\r\n\t\tsuper({\r\n\t\t\t...options,\r\n\t\t\tname: \"midas-aquatemp\",\r\n\t\t});\r\n\t\tthis.on(\"ready\", this.onReady.bind(this));\r\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\r\n\t\tMidasAquatemp.instance = this;\r\n\t}\r\n\tpublic static getInstance(): MidasAquatemp {\r\n\t\treturn MidasAquatemp.instance;\r\n\t}\r\n\r\n\tprivate async onReady(): Promise<void> {\r\n\t\tconst store = initStore();\r\n\t\tstore._this = this;\r\n\t\tstore.instance = this.instance;\r\n\r\n\t\tconst dpRoot = store.getDpRoot();\r\n\t\tthis.setState(\"info.connection\", false, true);\r\n\r\n\t\tstore.username = this.config.username;\r\n\t\tconst password = this.config.password;\r\n\t\tstore.interval = this.config.refresh;\r\n\t\tstore.apiLevel = this.config.selectApi;\r\n\t\tif (this.config.useDeviceMac) {\r\n\t\t\tstore.device = this.config.deviceMac;\r\n\t\t}\r\n\r\n\t\tstore.useDeviceMac = this.config.useDeviceMac;\r\n\t\tthis.log.debug(\"API-Level: \" + this.config.selectApi);\r\n\r\n\t\tsetupEndpoints();\r\n\r\n\r\n\t\tencryptPassword(password);\r\n\t\tawait createObjects();\r\n\t\tthis.log.info(\"Objects created\");\r\n\t\tclearValues();\r\n\t\tawait updateToken();\r\n\r\n\t\tfunction clearValues(): void {\r\n\t\t\tsaveValue(\"error\", true, \"boolean\");\r\n\t\t\tsaveValue(\"consumption\", 0, \"number\");\r\n\t\t\tsaveValue(\"state\", false, \"boolean\");\r\n\t\t\tsaveValue(\"rawJSON\", null, \"string\");\r\n\t\t}\r\n\r\n\t\tupdateIntervall = store._this.setInterval(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tawait updateToken();\r\n\t\t\t\tconst mode = await store._this.getStateAsync(dpRoot + \".mode\");\r\n\r\n\t\t\t\tif (mode && !mode.ack && mode.val) {\r\n\t\t\t\t\tupdateDevicePower(store.device, mode.val as number);\r\n\t\t\t\t}\r\n\t\t\t\tconst silent = await this.getStateAsync(dpRoot + \".silent\");\r\n\t\t\t\tif (silent && !silent.ack && silent.val) {\r\n\t\t\t\t\tupdateDevicePower(store.device, silent.val as number);\r\n\t\t\t\t}\r\n\t\t\t} catch (error: any) {\r\n\t\t\t\tstore._this.log.error(JSON.stringify(error));\r\n\t\t\t\tstore._this.log.error(JSON.stringify(error.stack));\r\n\t\t\t}\r\n\t\t}, store.interval * 1000);\r\n\r\n\t\ttokenRefreshTimer = this.setInterval(async function () {\r\n\t\t\tstore.token = \"\";\r\n\t\t\tstore._this.log.info(\"Token will be refreshed.\");\r\n\t\t\tawait updateToken();\r\n\t\t}, 3600000);\r\n\r\n\t\tthis.on(\"stateChange\", async (id, state) => {\r\n\t\t\ttry {\r\n\t\t\t\tif (id === dpRoot + \".mode\" && state && !state.ack) {\r\n\t\t\t\t\tthis.log.debug(\"Mode: \" + JSON.stringify(state));\r\n\t\t\t\t\tif (state && state.val) {\r\n\t\t\t\t\t\tconst mode = parseInt(state.val as string);\r\n\t\t\t\t\t\tupdateDevicePower(store.device, mode as number);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (id === dpRoot + \".silent\" && state && !state.ack) {\r\n\t\t\t\t\tthis.log.debug(\"Silent: \" + JSON.stringify(state));\r\n\t\t\t\t\tif (state && state.val) {\r\n\t\t\t\t\t\tupdateDeviceSilent(store.device, state.val as boolean);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (id === dpRoot + \".tempSet\" && state && !state.ack) {\r\n\t\t\t\t\tthis.log.debug(\"TempSet: \" + JSON.stringify(state));\r\n\r\n\t\t\t\t\tif (state && state.val) {\r\n\t\t\t\t\t\tupdateDeviceSetTemp(store.device, state.val as number);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error: any) {\r\n\t\t\t\tstore._this.log.error(JSON.stringify(error));\r\n\t\t\t\tstore._this.log.error(JSON.stringify(error.stack));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tawait this.subscribeStatesAsync(dpRoot + \".mode\");\r\n\t\tawait this.subscribeStatesAsync(dpRoot + \".silent\");\r\n\t\tawait this.subscribeStatesAsync(dpRoot + \".tempSet\");\r\n\t}\r\n\r\n\t/**\r\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\r\n\t */\r\n\tprivate onUnload(callback: () => void): void {\r\n\t\ttry {\r\n\t\t\tthis.clearInterval(updateIntervall);\r\n\t\t\tthis.clearInterval(tokenRefreshTimer);\r\n\r\n\t\t\tcallback();\r\n\t\t} catch (e) {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n}\r\nlet adapter;\r\n\r\nif (require.main !== module) {\r\n\t// Export the constructor in compact mode\r\n\tadapter = (options: Partial<utils.AdapterOptions> | undefined) => new MidasAquatemp(options);\r\n} else {\r\n\t// otherwise start the instance directly\r\n\t(() => new MidasAquatemp())();\r\n}\r\nexport { adapter };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,mBAA0B;AAE1B,YAAuB;AACvB,yBAA8B;AAC9B,6BAAgC;AAChC,uBAA+B;AAC/B,uBAA0B;AAE1B,mBAA4B;AAE5B,+BAAkC;AAClC,iCAAoC;AACpC,gCAAmC;AAEnC,IAAI;AACJ,IAAI;AAEG,MAAM,sBAAsB,MAAM,QAAQ;AAAA,EAChD,OAAe;AAAA,EAER,YAAY,UAAyC,CAAC,GAAG;AAC/D,UAAM;AAAA,MACL,GAAG;AAAA,MACH,MAAM;AAAA,IACP,CAAC;AACD,SAAK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AACxC,SAAK,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAC1C,kBAAc,WAAW;AAAA,EAC1B;AAAA,EACA,OAAc,cAA6B;AAC1C,WAAO,cAAc;AAAA,EACtB;AAAA,EAEA,MAAc,UAAyB;AACtC,UAAM,YAAQ,wBAAU;AACxB,UAAM,QAAQ;AACd,UAAM,WAAW,KAAK;AAEtB,UAAM,SAAS,MAAM,UAAU;AAC/B,SAAK,SAAS,mBAAmB,OAAO,IAAI;AAE5C,UAAM,WAAW,KAAK,OAAO;AAC7B,UAAM,WAAW,KAAK,OAAO;AAC7B,UAAM,WAAW,KAAK,OAAO;AAC7B,UAAM,WAAW,KAAK,OAAO;AAC7B,QAAI,KAAK,OAAO,cAAc;AAC7B,YAAM,SAAS,KAAK,OAAO;AAAA,IAC5B;AAEA,UAAM,eAAe,KAAK,OAAO;AACjC,SAAK,IAAI,MAAM,gBAAgB,KAAK,OAAO,SAAS;AAEpD,yCAAe;AAGf,gDAAgB,QAAQ;AACxB,cAAM,kCAAc;AACpB,SAAK,IAAI,KAAK,iBAAiB;AAC/B,gBAAY;AACZ,cAAM,0BAAY;AAElB,aAAS,cAAoB;AAC5B,sCAAU,SAAS,MAAM,SAAS;AAClC,sCAAU,eAAe,GAAG,QAAQ;AACpC,sCAAU,SAAS,OAAO,SAAS;AACnC,sCAAU,WAAW,MAAM,QAAQ;AAAA,IACpC;AAEA,sBAAkB,MAAM,MAAM,YAAY,YAAY;AACrD,UAAI;AACH,kBAAM,0BAAY;AAClB,cAAM,OAAO,MAAM,MAAM,MAAM,cAAc,SAAS,OAAO;AAE7D,YAAI,QAAQ,CAAC,KAAK,OAAO,KAAK,KAAK;AAClC,0DAAkB,MAAM,QAAQ,KAAK,GAAa;AAAA,QACnD;AACA,cAAM,SAAS,MAAM,KAAK,cAAc,SAAS,SAAS;AAC1D,YAAI,UAAU,CAAC,OAAO,OAAO,OAAO,KAAK;AACxC,0DAAkB,MAAM,QAAQ,OAAO,GAAa;AAAA,QACrD;AAAA,MACD,SAAS,OAAY;AACpB,cAAM,MAAM,IAAI,MAAM,KAAK,UAAU,KAAK,CAAC;AAC3C,cAAM,MAAM,IAAI,MAAM,KAAK,UAAU,MAAM,KAAK,CAAC;AAAA,MAClD;AAAA,IACD,GAAG,MAAM,WAAW,GAAI;AAExB,wBAAoB,KAAK,YAAY,iBAAkB;AACtD,YAAM,QAAQ;AACd,YAAM,MAAM,IAAI,KAAK,0BAA0B;AAC/C,gBAAM,0BAAY;AAAA,IACnB,GAAG,IAAO;AAEV,SAAK,GAAG,eAAe,OAAO,IAAI,UAAU;AAC3C,UAAI;AACH,YAAI,OAAO,SAAS,WAAW,SAAS,CAAC,MAAM,KAAK;AACnD,eAAK,IAAI,MAAM,WAAW,KAAK,UAAU,KAAK,CAAC;AAC/C,cAAI,SAAS,MAAM,KAAK;AACvB,kBAAM,OAAO,SAAS,MAAM,GAAa;AACzC,4DAAkB,MAAM,QAAQ,IAAc;AAAA,UAC/C;AAAA,QACD;AAEA,YAAI,OAAO,SAAS,aAAa,SAAS,CAAC,MAAM,KAAK;AACrD,eAAK,IAAI,MAAM,aAAa,KAAK,UAAU,KAAK,CAAC;AACjD,cAAI,SAAS,MAAM,KAAK;AACvB,8DAAmB,MAAM,QAAQ,MAAM,GAAc;AAAA,UACtD;AAAA,QACD;AAEA,YAAI,OAAO,SAAS,cAAc,SAAS,CAAC,MAAM,KAAK;AACtD,eAAK,IAAI,MAAM,cAAc,KAAK,UAAU,KAAK,CAAC;AAElD,cAAI,SAAS,MAAM,KAAK;AACvB,gEAAoB,MAAM,QAAQ,MAAM,GAAa;AAAA,UACtD;AAAA,QACD;AAAA,MACD,SAAS,OAAY;AACpB,cAAM,MAAM,IAAI,MAAM,KAAK,UAAU,KAAK,CAAC;AAC3C,cAAM,MAAM,IAAI,MAAM,KAAK,UAAU,MAAM,KAAK,CAAC;AAAA,MAClD;AAAA,IACD,CAAC;AAED,UAAM,KAAK,qBAAqB,SAAS,OAAO;AAChD,UAAM,KAAK,qBAAqB,SAAS,SAAS;AAClD,UAAM,KAAK,qBAAqB,SAAS,UAAU;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA,EAKQ,SAAS,UAA4B;AAC5C,QAAI;AACH,WAAK,cAAc,eAAe;AAClC,WAAK,cAAc,iBAAiB;AAEpC,eAAS;AAAA,IACV,SAAS,GAAG;AACX,eAAS;AAAA,IACV;AAAA,EACD;AACD;AACA,IAAI;AAEJ,IAAI,QAAQ,SAAS,QAAQ;AAE5B,YAAU,CAAC,YAAuD,IAAI,cAAc,OAAO;AAC5F,OAAO;AAEN,GAAC,MAAM,IAAI,cAAc,GAAG;AAC7B;",
  "names": []
}
